/*
 * generated by Xtext 2.14.0
 */
grammar InternalGo;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package com.ufcg.compiladores.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.ufcg.compiladores.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.ufcg.compiladores.services.GoGrammarAccess;

}
@parser::members {
	private GoGrammarAccess grammarAccess;

	public void setGrammarAccess(GoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleInit
entryRuleInit
:
{ before(grammarAccess.getInitRule()); }
	 ruleInit
{ after(grammarAccess.getInitRule()); } 
	 EOF 
;

// Rule Init
ruleInit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitAccess().getElementsAssignment()); }
		(rule__Init__ElementsAssignment)*
		{ after(grammarAccess.getInitAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBOOLEAN_VALUE
entryRuleBOOLEAN_VALUE
:
{ before(grammarAccess.getBOOLEAN_VALUERule()); }
	 ruleBOOLEAN_VALUE
{ after(grammarAccess.getBOOLEAN_VALUERule()); } 
	 EOF 
;

// Rule BOOLEAN_VALUE
ruleBOOLEAN_VALUE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBOOLEAN_VALUEAccess().getAlternatives()); }
		(rule__BOOLEAN_VALUE__Alternatives)
		{ after(grammarAccess.getBOOLEAN_VALUEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGoDecl
entryRuleGoDecl
:
{ before(grammarAccess.getGoDeclRule()); }
	 ruleGoDecl
{ after(grammarAccess.getGoDeclRule()); } 
	 EOF 
;

// Rule GoDecl
ruleGoDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoDeclAccess().getAlternatives()); }
		(rule__GoDecl__Alternatives)
		{ after(grammarAccess.getGoDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForDecl
entryRuleForDecl
:
{ before(grammarAccess.getForDeclRule()); }
	 ruleForDecl
{ after(grammarAccess.getForDeclRule()); } 
	 EOF 
;

// Rule ForDecl
ruleForDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForDeclAccess().getGroup()); }
		(rule__ForDecl__Group__0)
		{ after(grammarAccess.getForDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRangeDecl
entryRuleRangeDecl
:
{ before(grammarAccess.getRangeDeclRule()); }
	 ruleRangeDecl
{ after(grammarAccess.getRangeDeclRule()); } 
	 EOF 
;

// Rule RangeDecl
ruleRangeDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeDeclAccess().getGroup()); }
		(rule__RangeDecl__Group__0)
		{ after(grammarAccess.getRangeDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForClause
entryRuleForClause
:
{ before(grammarAccess.getForClauseRule()); }
	 ruleForClause
{ after(grammarAccess.getForClauseRule()); } 
	 EOF 
;

// Rule ForClause
ruleForClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForClauseAccess().getGroup()); }
		(rule__ForClause__Group__0)
		{ after(grammarAccess.getForClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitStmt
entryRuleInitStmt
:
{ before(grammarAccess.getInitStmtRule()); }
	 ruleInitStmt
{ after(grammarAccess.getInitStmtRule()); } 
	 EOF 
;

// Rule InitStmt
ruleInitStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitStmtAccess().getVarDeclAssignment()); }
		(rule__InitStmt__VarDeclAssignment)
		{ after(grammarAccess.getInitStmtAccess().getVarDeclAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostStmt
entryRulePostStmt
:
{ before(grammarAccess.getPostStmtRule()); }
	 rulePostStmt
{ after(grammarAccess.getPostStmtRule()); } 
	 EOF 
;

// Rule PostStmt
rulePostStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostStmtAccess().getArtAssignment()); }
		(rule__PostStmt__ArtAssignment)
		{ after(grammarAccess.getPostStmtAccess().getArtAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIDList
entryRuleIDList
:
{ before(grammarAccess.getIDListRule()); }
	 ruleIDList
{ after(grammarAccess.getIDListRule()); } 
	 EOF 
;

// Rule IDList
ruleIDList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIDListAccess().getAlternatives()); }
		(rule__IDList__Alternatives)
		{ after(grammarAccess.getIDListAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDecl
entryRuleVarDecl
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup()); }
		(rule__VarDecl__Group__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignatureDel
entryRuleSignatureDel
:
{ before(grammarAccess.getSignatureDelRule()); }
	 ruleSignatureDel
{ after(grammarAccess.getSignatureDelRule()); } 
	 EOF 
;

// Rule SignatureDel
ruleSignatureDel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignatureDelAccess().getGroup()); }
		(rule__SignatureDel__Group__0)
		{ after(grammarAccess.getSignatureDelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTIPO
entryRuleTIPO
:
{ before(grammarAccess.getTIPORule()); }
	 ruleTIPO
{ after(grammarAccess.getTIPORule()); } 
	 EOF 
;

// Rule TIPO
ruleTIPO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTIPOAccess().getAlternatives()); }
		(rule__TIPO__Alternatives)
		{ after(grammarAccess.getTIPOAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVar
entryRuleVar
:
{ before(grammarAccess.getVarRule()); }
	 ruleVar
{ after(grammarAccess.getVarRule()); } 
	 EOF 
;

// Rule Var
ruleVar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarAccess().getVarAssignment()); }
		(rule__Var__VarAssignment)
		{ after(grammarAccess.getVarAccess().getVarAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConst
entryRuleConst
:
{ before(grammarAccess.getConstRule()); }
	 ruleConst
{ after(grammarAccess.getConstRule()); } 
	 EOF 
;

// Rule Const
ruleConst 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstAccess().getConstAssignment()); }
		(rule__Const__ConstAssignment)
		{ after(grammarAccess.getConstAccess().getConstAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIGUAL
entryRuleIGUAL
:
{ before(grammarAccess.getIGUALRule()); }
	 ruleIGUAL
{ after(grammarAccess.getIGUALRule()); } 
	 EOF 
;

// Rule IGUAL
ruleIGUAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIGUALAccess().getIgualAssignment()); }
		(rule__IGUAL__IgualAssignment)
		{ after(grammarAccess.getIGUALAccess().getIgualAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePONTOSIGUAL
entryRulePONTOSIGUAL
:
{ before(grammarAccess.getPONTOSIGUALRule()); }
	 rulePONTOSIGUAL
{ after(grammarAccess.getPONTOSIGUALRule()); } 
	 EOF 
;

// Rule PONTOSIGUAL
rulePONTOSIGUAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPONTOSIGUALAccess().getOpAssignment()); }
		(rule__PONTOSIGUAL__OpAssignment)
		{ after(grammarAccess.getPONTOSIGUALAccess().getOpAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEXPRESSAOLINHA
entryRuleEXPRESSAOLINHA
:
{ before(grammarAccess.getEXPRESSAOLINHARule()); }
	 ruleEXPRESSAOLINHA
{ after(grammarAccess.getEXPRESSAOLINHARule()); } 
	 EOF 
;

// Rule EXPRESSAOLINHA
ruleEXPRESSAOLINHA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEXPRESSAOLINHAAccess().getAlternatives()); }
		(rule__EXPRESSAOLINHA__Alternatives)
		{ after(grammarAccess.getEXPRESSAOLINHAAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEXPRESSAO
entryRuleEXPRESSAO
:
{ before(grammarAccess.getEXPRESSAORule()); }
	 ruleEXPRESSAO
{ after(grammarAccess.getEXPRESSAORule()); } 
	 EOF 
;

// Rule EXPRESSAO
ruleEXPRESSAO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getAlternatives()); }
		(rule__EXPRESSAO__Alternatives)
		{ after(grammarAccess.getEXPRESSAOAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnStmt
entryRuleReturnStmt
:
{ before(grammarAccess.getReturnStmtRule()); }
	 ruleReturnStmt
{ after(grammarAccess.getReturnStmtRule()); } 
	 EOF 
;

// Rule ReturnStmt
ruleReturnStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnStmtAccess().getGroup()); }
		(rule__ReturnStmt__Group__0)
		{ after(grammarAccess.getReturnStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayValue
entryRuleArrayValue
:
{ before(grammarAccess.getArrayValueRule()); }
	 ruleArrayValue
{ after(grammarAccess.getArrayValueRule()); } 
	 EOF 
;

// Rule ArrayValue
ruleArrayValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayValueAccess().getGroup()); }
		(rule__ArrayValue__Group__0)
		{ after(grammarAccess.getArrayValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteraisList
entryRuleLiteraisList
:
{ before(grammarAccess.getLiteraisListRule()); }
	 ruleLiteraisList
{ after(grammarAccess.getLiteraisListRule()); } 
	 EOF 
;

// Rule LiteraisList
ruleLiteraisList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteraisListAccess().getAlternatives()); }
		(rule__LiteraisList__Alternatives)
		{ after(grammarAccess.getLiteraisListAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLITERAIS_BASICOS
entryRuleLITERAIS_BASICOS
:
{ before(grammarAccess.getLITERAIS_BASICOSRule()); }
	 ruleLITERAIS_BASICOS
{ after(grammarAccess.getLITERAIS_BASICOSRule()); } 
	 EOF 
;

// Rule LITERAIS_BASICOS
ruleLITERAIS_BASICOS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getAlternatives()); }
		(rule__LITERAIS_BASICOS__Alternatives)
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBINARY_EXP
entryRuleBINARY_EXP
:
{ before(grammarAccess.getBINARY_EXPRule()); }
	 ruleBINARY_EXP
{ after(grammarAccess.getBINARY_EXPRule()); } 
	 EOF 
;

// Rule BINARY_EXP
ruleBINARY_EXP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getGroup()); }
		(rule__BINARY_EXP__Group__0)
		{ after(grammarAccess.getBINARY_EXPAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionType
entryRuleFunctionType
:
{ before(grammarAccess.getFunctionTypeRule()); }
	 ruleFunctionType
{ after(grammarAccess.getFunctionTypeRule()); } 
	 EOF 
;

// Rule FunctionType
ruleFunctionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getGroup()); }
		(rule__FunctionType__Group__0)
		{ after(grammarAccess.getFunctionTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignature
entryRuleSignature
:
{ before(grammarAccess.getSignatureRule()); }
	 ruleSignature
{ after(grammarAccess.getSignatureRule()); } 
	 EOF 
;

// Rule Signature
ruleSignature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignatureAccess().getGroup()); }
		(rule__Signature__Group__0)
		{ after(grammarAccess.getSignatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameters
entryRuleParameters
:
{ before(grammarAccess.getParametersRule()); }
	 ruleParameters
{ after(grammarAccess.getParametersRule()); } 
	 EOF 
;

// Rule Parameters
ruleParameters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametersAccess().getGroup()); }
		(rule__Parameters__Group__0)
		{ after(grammarAccess.getParametersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleABRE_PARENTESES
entryRuleABRE_PARENTESES
:
{ before(grammarAccess.getABRE_PARENTESESRule()); }
	 ruleABRE_PARENTESES
{ after(grammarAccess.getABRE_PARENTESESRule()); } 
	 EOF 
;

// Rule ABRE_PARENTESES
ruleABRE_PARENTESES 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getABRE_PARENTESESAccess().getLeftParenthesisKeyword()); }
		'('
		{ after(grammarAccess.getABRE_PARENTESESAccess().getLeftParenthesisKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFECHA_PARENTESES
entryRuleFECHA_PARENTESES
:
{ before(grammarAccess.getFECHA_PARENTESESRule()); }
	 ruleFECHA_PARENTESES
{ after(grammarAccess.getFECHA_PARENTESESRule()); } 
	 EOF 
;

// Rule FECHA_PARENTESES
ruleFECHA_PARENTESES 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFECHA_PARENTESESAccess().getRightParenthesisKeyword()); }
		')'
		{ after(grammarAccess.getFECHA_PARENTESESAccess().getRightParenthesisKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfCondition
entryRuleIfCondition
:
{ before(grammarAccess.getIfConditionRule()); }
	 ruleIfCondition
{ after(grammarAccess.getIfConditionRule()); } 
	 EOF 
;

// Rule IfCondition
ruleIfCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfConditionAccess().getGroup()); }
		(rule__IfCondition__Group__0)
		{ after(grammarAccess.getIfConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElseIfCondition
entryRuleElseIfCondition
:
{ before(grammarAccess.getElseIfConditionRule()); }
	 ruleElseIfCondition
{ after(grammarAccess.getElseIfConditionRule()); } 
	 EOF 
;

// Rule ElseIfCondition
ruleElseIfCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseIfConditionAccess().getGroup()); }
		(rule__ElseIfCondition__Group__0)
		{ after(grammarAccess.getElseIfConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElseCondition
entryRuleElseCondition
:
{ before(grammarAccess.getElseConditionRule()); }
	 ruleElseCondition
{ after(grammarAccess.getElseConditionRule()); } 
	 EOF 
;

// Rule ElseCondition
ruleElseCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseConditionAccess().getGroup()); }
		(rule__ElseCondition__Group__0)
		{ after(grammarAccess.getElseConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBLOCK
entryRuleBLOCK
:
{ before(grammarAccess.getBLOCKRule()); }
	 ruleBLOCK
{ after(grammarAccess.getBLOCKRule()); } 
	 EOF 
;

// Rule BLOCK
ruleBLOCK 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBLOCKAccess().getGroup()); }
		(rule__BLOCK__Group__0)
		{ after(grammarAccess.getBLOCKAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePARAMETERS_LIST
entryRulePARAMETERS_LIST
:
{ before(grammarAccess.getPARAMETERS_LISTRule()); }
	 rulePARAMETERS_LIST
{ after(grammarAccess.getPARAMETERS_LISTRule()); } 
	 EOF 
;

// Rule PARAMETERS_LIST
rulePARAMETERS_LIST 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPARAMETERS_LISTAccess().getGroup()); }
		(rule__PARAMETERS_LIST__Group__0)
		{ after(grammarAccess.getPARAMETERS_LISTAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePARAMETER
entryRulePARAMETER
:
{ before(grammarAccess.getPARAMETERRule()); }
	 rulePARAMETER
{ after(grammarAccess.getPARAMETERRule()); } 
	 EOF 
;

// Rule PARAMETER
rulePARAMETER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPARAMETERAccess().getAlternatives()); }
		(rule__PARAMETER__Alternatives)
		{ after(grammarAccess.getPARAMETERAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypes
entryRuleTypes
:
{ before(grammarAccess.getTypesRule()); }
	 ruleTypes
{ after(grammarAccess.getTypesRule()); } 
	 EOF 
;

// Rule Types
ruleTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypesAccess().getAlternatives()); }
		(rule__Types__Alternatives)
		{ after(grammarAccess.getTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayType
entryRuleArrayType
:
{ before(grammarAccess.getArrayTypeRule()); }
	 ruleArrayType
{ after(grammarAccess.getArrayTypeRule()); } 
	 EOF 
;

// Rule ArrayType
ruleArrayType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayTypeAccess().getGroup()); }
		(rule__ArrayType__Group__0)
		{ after(grammarAccess.getArrayTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicType
entryRuleBasicType
:
{ before(grammarAccess.getBasicTypeRule()); }
	 ruleBasicType
{ after(grammarAccess.getBasicTypeRule()); } 
	 EOF 
;

// Rule BasicType
ruleBasicType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicTypeAccess().getAlternatives()); }
		(rule__BasicType__Alternatives)
		{ after(grammarAccess.getBasicTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarCall
entryRuleVarCall
:
{ before(grammarAccess.getVarCallRule()); }
	 ruleVarCall
{ after(grammarAccess.getVarCallRule()); } 
	 EOF 
;

// Rule VarCall
ruleVarCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarCallAccess().getIdAssignment()); }
		(rule__VarCall__IdAssignment)
		{ after(grammarAccess.getVarCallAccess().getIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
		(rule__FunctionCall__Group__0)
		{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChamada
entryRuleChamada
:
{ before(grammarAccess.getChamadaRule()); }
	 ruleChamada
{ after(grammarAccess.getChamadaRule()); } 
	 EOF 
;

// Rule Chamada
ruleChamada 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChamadaAccess().getAlternatives()); }
		(rule__Chamada__Alternatives)
		{ after(grammarAccess.getChamadaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBOOL_OP
entryRuleBOOL_OP
:
{ before(grammarAccess.getBOOL_OPRule()); }
	 ruleBOOL_OP
{ after(grammarAccess.getBOOL_OPRule()); } 
	 EOF 
;

// Rule BOOL_OP
ruleBOOL_OP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBOOL_OPAccess().getAlternatives()); }
		(rule__BOOL_OP__Alternatives)
		{ after(grammarAccess.getBOOL_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleARIT_EXPR
entryRuleARIT_EXPR
:
{ before(grammarAccess.getARIT_EXPRRule()); }
	 ruleARIT_EXPR
{ after(grammarAccess.getARIT_EXPRRule()); } 
	 EOF 
;

// Rule ARIT_EXPR
ruleARIT_EXPR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getAlternatives()); }
		(rule__ARIT_EXPR__Alternatives)
		{ after(grammarAccess.getARIT_EXPRAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStmt
entryRuleIfStmt
:
{ before(grammarAccess.getIfStmtRule()); }
	 ruleIfStmt
{ after(grammarAccess.getIfStmtRule()); } 
	 EOF 
;

// Rule IfStmt
ruleIfStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStmtAccess().getGroup()); }
		(rule__IfStmt__Group__0)
		{ after(grammarAccess.getIfStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleARIT_OP
entryRuleARIT_OP
:
{ before(grammarAccess.getARIT_OPRule()); }
	 ruleARIT_OP
{ after(grammarAccess.getARIT_OPRule()); } 
	 EOF 
;

// Rule ARIT_OP
ruleARIT_OP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getARIT_OPAccess().getAlternatives()); }
		(rule__ARIT_OP__Alternatives)
		{ after(grammarAccess.getARIT_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleARIT_ATR
entryRuleARIT_ATR
:
{ before(grammarAccess.getARIT_ATRRule()); }
	 ruleARIT_ATR
{ after(grammarAccess.getARIT_ATRRule()); } 
	 EOF 
;

// Rule ARIT_ATR
ruleARIT_ATR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getARIT_ATRAccess().getAlternatives()); }
		(rule__ARIT_ATR__Alternatives)
		{ after(grammarAccess.getARIT_ATRAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCOMPARISON
entryRuleCOMPARISON
:
{ before(grammarAccess.getCOMPARISONRule()); }
	 ruleCOMPARISON
{ after(grammarAccess.getCOMPARISONRule()); } 
	 EOF 
;

// Rule COMPARISON
ruleCOMPARISON 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCOMPARISONAccess().getAlternatives()); }
		(rule__COMPARISON__Alternatives)
		{ after(grammarAccess.getCOMPARISONAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_VALUE__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLEAN_VALUEAccess().getVerdadeiroAssignment_0()); }
		(rule__BOOLEAN_VALUE__VerdadeiroAssignment_0)
		{ after(grammarAccess.getBOOLEAN_VALUEAccess().getVerdadeiroAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLEAN_VALUEAccess().getFalsoAssignment_1()); }
		(rule__BOOLEAN_VALUE__FalsoAssignment_1)
		{ after(grammarAccess.getBOOLEAN_VALUEAccess().getFalsoAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoDeclAccess().getVarAssignment_0()); }
		(rule__GoDecl__VarAssignment_0)
		{ after(grammarAccess.getGoDeclAccess().getVarAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getGoDeclAccess().getFuncAssignment_1()); }
		(rule__GoDecl__FuncAssignment_1)
		{ after(grammarAccess.getGoDeclAccess().getFuncAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getGoDeclAccess().getExpressaoAssignment_2()); }
		(rule__GoDecl__ExpressaoAssignment_2)
		{ after(grammarAccess.getGoDeclAccess().getExpressaoAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDecl__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForDeclAccess().getClauseAssignment_1_0()); }
		(rule__ForDecl__ClauseAssignment_1_0)
		{ after(grammarAccess.getForDeclAccess().getClauseAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getForDeclAccess().getRangeAssignment_1_1()); }
		(rule__ForDecl__RangeAssignment_1_1)
		{ after(grammarAccess.getForDeclAccess().getRangeAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDecl__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeDeclAccess().getIgualAssignment_2_0()); }
		(rule__RangeDecl__IgualAssignment_2_0)
		{ after(grammarAccess.getRangeDeclAccess().getIgualAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeDeclAccess().getOpAssignment_2_1()); }
		(rule__RangeDecl__OpAssignment_2_1)
		{ after(grammarAccess.getRangeDeclAccess().getOpAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDecl__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeDeclAccess().getVariavelAssignment_4_0()); }
		(rule__RangeDecl__VariavelAssignment_4_0)
		{ after(grammarAccess.getRangeDeclAccess().getVariavelAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeDeclAccess().getFuncAssignment_4_1()); }
		(rule__RangeDecl__FuncAssignment_4_1)
		{ after(grammarAccess.getRangeDeclAccess().getFuncAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IDList__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIDListAccess().getIdListAssignment_0()); }
		(rule__IDList__IdListAssignment_0)
		{ after(grammarAccess.getIDListAccess().getIdListAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getIDListAccess().getGroup_1()); }
		(rule__IDList__Group_1__0)
		{ after(grammarAccess.getIDListAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getAtribuicaoAssignment_1_0()); }
		(rule__VarDecl__AtribuicaoAssignment_1_0)
		{ after(grammarAccess.getVarDeclAccess().getAtribuicaoAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarDeclAccess().getProntAssignment_1_1()); }
		(rule__VarDecl__ProntAssignment_1_1)
		{ after(grammarAccess.getVarDeclAccess().getProntAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getIgualAssignment_2_0()); }
		(rule__Assignment__IgualAssignment_2_0)
		{ after(grammarAccess.getAssignmentAccess().getIgualAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentAccess().getDoisAssignment_2_1()); }
		(rule__Assignment__DoisAssignment_2_1)
		{ after(grammarAccess.getAssignmentAccess().getDoisAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TIPO__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTIPOAccess().getVariavelAssignment_0()); }
		(rule__TIPO__VariavelAssignment_0)
		{ after(grammarAccess.getTIPOAccess().getVariavelAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTIPOAccess().getConstanteAssignment_1()); }
		(rule__TIPO__ConstanteAssignment_1)
		{ after(grammarAccess.getTIPOAccess().getConstanteAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAOLINHA__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOLINHAAccess().getGroup_0()); }
		(rule__EXPRESSAOLINHA__Group_0__0)
		{ after(grammarAccess.getEXPRESSAOLINHAAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getEXPRESSAOLINHAAccess().getExpAssignment_1()); }
		(rule__EXPRESSAOLINHA__ExpAssignment_1)
		{ after(grammarAccess.getEXPRESSAOLINHAAccess().getExpAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getGroup_0()); }
		(rule__EXPRESSAO__Group_0__0)
		{ after(grammarAccess.getEXPRESSAOAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getBinary_expAssignment_1()); }
		(rule__EXPRESSAO__Binary_expAssignment_1)
		{ after(grammarAccess.getEXPRESSAOAccess().getBinary_expAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getBasicAssignment_2()); }
		(rule__EXPRESSAO__BasicAssignment_2)
		{ after(grammarAccess.getEXPRESSAOAccess().getBasicAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getAssignmentAssignment_3()); }
		(rule__EXPRESSAO__AssignmentAssignment_3)
		{ after(grammarAccess.getEXPRESSAOAccess().getAssignmentAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getForAssignment_4()); }
		(rule__EXPRESSAO__ForAssignment_4)
		{ after(grammarAccess.getEXPRESSAOAccess().getForAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getArrayValueAssignment_5()); }
		(rule__EXPRESSAO__ArrayValueAssignment_5)
		{ after(grammarAccess.getEXPRESSAOAccess().getArrayValueAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getVariaveisAssignment_6()); }
		(rule__EXPRESSAO__VariaveisAssignment_6)
		{ after(grammarAccess.getEXPRESSAOAccess().getVariaveisAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getChamAssignment_7()); }
		(rule__EXPRESSAO__ChamAssignment_7)
		{ after(grammarAccess.getEXPRESSAOAccess().getChamAssignment_7()); }
	)
	|
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getIfAssignment_8()); }
		(rule__EXPRESSAO__IfAssignment_8)
		{ after(grammarAccess.getEXPRESSAOAccess().getIfAssignment_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStmtAccess().getBasicAssignment_2_0()); }
		(rule__ReturnStmt__BasicAssignment_2_0)
		{ after(grammarAccess.getReturnStmtAccess().getBasicAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getReturnStmtAccess().getFuncAssignment_2_1()); }
		(rule__ReturnStmt__FuncAssignment_2_1)
		{ after(grammarAccess.getReturnStmtAccess().getFuncAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getReturnStmtAccess().getIdVarAssignment_2_2()); }
		(rule__ReturnStmt__IdVarAssignment_2_2)
		{ after(grammarAccess.getReturnStmtAccess().getIdVarAssignment_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteraisList__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteraisListAccess().getLitAssignment_0()); }
		(rule__LiteraisList__LitAssignment_0)
		{ after(grammarAccess.getLiteraisListAccess().getLitAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteraisListAccess().getGroup_1()); }
		(rule__LiteraisList__Group_1__0)
		{ after(grammarAccess.getLiteraisListAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LITERAIS_BASICOS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getNumeroAssignment_0()); }
		(rule__LITERAIS_BASICOS__NumeroAssignment_0)
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getNumeroAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getStringAssignment_1()); }
		(rule__LITERAIS_BASICOS__StringAssignment_1)
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getStringAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getBooleanoAssignment_2()); }
		(rule__LITERAIS_BASICOS__BooleanoAssignment_2)
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getBooleanoAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getBasicAssignment_1_0()); }
		(rule__BINARY_EXP__BasicAssignment_1_0)
		{ after(grammarAccess.getBINARY_EXPAccess().getBasicAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getVarCalAssignment_1_1()); }
		(rule__BINARY_EXP__VarCalAssignment_1_1)
		{ after(grammarAccess.getBINARY_EXPAccess().getVarCalAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getFuncAssignment_1_2()); }
		(rule__BINARY_EXP__FuncAssignment_1_2)
		{ after(grammarAccess.getBINARY_EXPAccess().getFuncAssignment_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getBoolAssignment_2_0()); }
		(rule__BINARY_EXP__BoolAssignment_2_0)
		{ after(grammarAccess.getBINARY_EXPAccess().getBoolAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getAritAssignment_2_1()); }
		(rule__BINARY_EXP__AritAssignment_2_1)
		{ after(grammarAccess.getBINARY_EXPAccess().getAritAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getBasicAssignment_3_0()); }
		(rule__BINARY_EXP__BasicAssignment_3_0)
		{ after(grammarAccess.getBINARY_EXPAccess().getBasicAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getVarCalAssignment_3_1()); }
		(rule__BINARY_EXP__VarCalAssignment_3_1)
		{ after(grammarAccess.getBINARY_EXPAccess().getVarCalAssignment_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getFuncAssignment_3_2()); }
		(rule__BINARY_EXP__FuncAssignment_3_2)
		{ after(grammarAccess.getBINARY_EXPAccess().getFuncAssignment_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPARAMETERAccess().getGroup_0()); }
		(rule__PARAMETER__Group_0__0)
		{ after(grammarAccess.getPARAMETERAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPARAMETERAccess().getGroup_1()); }
		(rule__PARAMETER__Group_1__0)
		{ after(grammarAccess.getPARAMETERAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypesAccess().getGroup_0()); }
		(rule__Types__Group_0__0)
		{ after(grammarAccess.getTypesAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getArrayAssignment_1()); }
		(rule__Types__ArrayAssignment_1)
		{ after(grammarAccess.getTypesAccess().getArrayAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getStringAssignment_0()); }
		(rule__BasicType__StringAssignment_0)
		{ after(grammarAccess.getBasicTypeAccess().getStringAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getIntAssignment_1()); }
		(rule__BasicType__IntAssignment_1)
		{ after(grammarAccess.getBasicTypeAccess().getIntAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getFloatAssignment_2()); }
		(rule__BasicType__FloatAssignment_2)
		{ after(grammarAccess.getBasicTypeAccess().getFloatAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getBooleanAssignment_3()); }
		(rule__BasicType__BooleanAssignment_3)
		{ after(grammarAccess.getBasicTypeAccess().getBooleanAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chamada__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChamadaAccess().getChamAssignment_0()); }
		(rule__Chamada__ChamAssignment_0)
		{ after(grammarAccess.getChamadaAccess().getChamAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getChamadaAccess().getChamAssignment_1()); }
		(rule__Chamada__ChamAssignment_1)
		{ after(grammarAccess.getChamadaAccess().getChamAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getChamadaAccess().getChamAssignment_2()); }
		(rule__Chamada__ChamAssignment_2)
		{ after(grammarAccess.getChamadaAccess().getChamAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOL_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOL_OPAccess().getGroup_0()); }
		(rule__BOOL_OP__Group_0__0)
		{ after(grammarAccess.getBOOL_OPAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBOOL_OPAccess().getGroup_1()); }
		(rule__BOOL_OP__Group_1__0)
		{ after(grammarAccess.getBOOL_OPAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getGroup_0()); }
		(rule__ARIT_EXPR__Group_0__0)
		{ after(grammarAccess.getARIT_EXPRAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getGroup_1()); }
		(rule__ARIT_EXPR__Group_1__0)
		{ after(grammarAccess.getARIT_EXPRAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getGroup_2()); }
		(rule__ARIT_EXPR__Group_2__0)
		{ after(grammarAccess.getARIT_EXPRAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getNum1Assignment_0_0_0()); }
		(rule__ARIT_EXPR__Num1Assignment_0_0_0)
		{ after(grammarAccess.getARIT_EXPRAccess().getNum1Assignment_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getVar1Assignment_0_0_1()); }
		(rule__ARIT_EXPR__Var1Assignment_0_0_1)
		{ after(grammarAccess.getARIT_EXPRAccess().getVar1Assignment_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Alternatives_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getNum2Assignment_0_2_0()); }
		(rule__ARIT_EXPR__Num2Assignment_0_2_0)
		{ after(grammarAccess.getARIT_EXPRAccess().getNum2Assignment_0_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getVar2Assignment_0_2_1()); }
		(rule__ARIT_EXPR__Var2Assignment_0_2_1)
		{ after(grammarAccess.getARIT_EXPRAccess().getVar2Assignment_0_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getNumAssignment_1_0_0()); }
		(rule__ARIT_EXPR__NumAssignment_1_0_0)
		{ after(grammarAccess.getARIT_EXPRAccess().getNumAssignment_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getVarAssignment_1_0_1()); }
		(rule__ARIT_EXPR__VarAssignment_1_0_1)
		{ after(grammarAccess.getARIT_EXPRAccess().getVarAssignment_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Alternatives_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getNumAssignment_2_1_0()); }
		(rule__ARIT_EXPR__NumAssignment_2_1_0)
		{ after(grammarAccess.getARIT_EXPRAccess().getNumAssignment_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getVarAssignment_2_1_1()); }
		(rule__ARIT_EXPR__VarAssignment_2_1_1)
		{ after(grammarAccess.getARIT_EXPRAccess().getVarAssignment_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_OPAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getARIT_OPAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getARIT_OPAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getARIT_OPAccess().getHyphenMinusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getARIT_OPAccess().getAsteriskKeyword_2()); }
		'*'
		{ after(grammarAccess.getARIT_OPAccess().getAsteriskKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getARIT_OPAccess().getSolidusKeyword_3()); }
		'/'
		{ after(grammarAccess.getARIT_OPAccess().getSolidusKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getARIT_OPAccess().getCircumflexAccentKeyword_4()); }
		'^'
		{ after(grammarAccess.getARIT_OPAccess().getCircumflexAccentKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_ATR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_ATRAccess().getPlusSignPlusSignKeyword_0()); }
		'++'
		{ after(grammarAccess.getARIT_ATRAccess().getPlusSignPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getARIT_ATRAccess().getHyphenMinusHyphenMinusKeyword_1()); }
		'--'
		{ after(grammarAccess.getARIT_ATRAccess().getHyphenMinusHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARISONAccess().getIgualAssignment_0()); }
		(rule__COMPARISON__IgualAssignment_0)
		{ after(grammarAccess.getCOMPARISONAccess().getIgualAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISONAccess().getMaiorigualqueAssignment_1()); }
		(rule__COMPARISON__MaiorigualqueAssignment_1)
		{ after(grammarAccess.getCOMPARISONAccess().getMaiorigualqueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISONAccess().getMenorigualqueAssignment_2()); }
		(rule__COMPARISON__MenorigualqueAssignment_2)
		{ after(grammarAccess.getCOMPARISONAccess().getMenorigualqueAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISONAccess().getMaiorqueAssignment_3()); }
		(rule__COMPARISON__MaiorqueAssignment_3)
		{ after(grammarAccess.getCOMPARISONAccess().getMaiorqueAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISONAccess().getMenorqueAssignment_4()); }
		(rule__COMPARISON__MenorqueAssignment_4)
		{ after(grammarAccess.getCOMPARISONAccess().getMenorqueAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForDecl__Group__0__Impl
	rule__ForDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForDeclAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForDeclAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForDecl__Group__1__Impl
	rule__ForDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForDeclAccess().getAlternatives_1()); }
	(rule__ForDecl__Alternatives_1)
	{ after(grammarAccess.getForDeclAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForDecl__Group__2__Impl
	rule__ForDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForDeclAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getForDeclAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForDecl__Group__3__Impl
	rule__ForDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForDeclAccess().getComandosAssignment_3()); }
	(rule__ForDecl__ComandosAssignment_3)?
	{ after(grammarAccess.getForDeclAccess().getComandosAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForDeclAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getForDeclAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeDecl__Group__0__Impl
	rule__RangeDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeDeclAccess().getRangeDeclAction_0()); }
	()
	{ after(grammarAccess.getRangeDeclAccess().getRangeDeclAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeDecl__Group__1__Impl
	rule__RangeDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeDeclAccess().getIdListAssignment_1()); }
	(rule__RangeDecl__IdListAssignment_1)
	{ after(grammarAccess.getRangeDeclAccess().getIdListAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeDecl__Group__2__Impl
	rule__RangeDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeDeclAccess().getAlternatives_2()); }
	(rule__RangeDecl__Alternatives_2)
	{ after(grammarAccess.getRangeDeclAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeDecl__Group__3__Impl
	rule__RangeDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeDeclAccess().getRangeKeyword_3()); }
	'range'
	{ after(grammarAccess.getRangeDeclAccess().getRangeKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeDeclAccess().getAlternatives_4()); }
	(rule__RangeDecl__Alternatives_4)
	{ after(grammarAccess.getRangeDeclAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__0__Impl
	rule__ForClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getForClauseAction_0()); }
	()
	{ after(grammarAccess.getForClauseAccess().getForClauseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__1__Impl
	rule__ForClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getInitAssignment_1()); }
	(rule__ForClause__InitAssignment_1)?
	{ after(grammarAccess.getForClauseAccess().getInitAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__2__Impl
	rule__ForClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getForClauseAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__3__Impl
	rule__ForClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getConditionAssignment_3()); }
	(rule__ForClause__ConditionAssignment_3)?
	{ after(grammarAccess.getForClauseAccess().getConditionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__4__Impl
	rule__ForClause__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getForClauseAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getPostAssignment_5()); }
	(rule__ForClause__PostAssignment_5)?
	{ after(grammarAccess.getForClauseAccess().getPostAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getExpr1Assignment_0()); }
	(rule__Condition__Expr1Assignment_0)
	{ after(grammarAccess.getConditionAccess().getExpr1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
	rule__Condition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getComparadorAssignment_1()); }
	(rule__Condition__ComparadorAssignment_1)
	{ after(grammarAccess.getConditionAccess().getComparadorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getExpr2Assignment_2()); }
	(rule__Condition__Expr2Assignment_2)
	{ after(grammarAccess.getConditionAccess().getExpr2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IDList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IDList__Group_1__0__Impl
	rule__IDList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IDList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIDListAccess().getIdListAssignment_1_0()); }
	(rule__IDList__IdListAssignment_1_0)
	{ after(grammarAccess.getIDListAccess().getIdListAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IDList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IDList__Group_1__1__Impl
	rule__IDList__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IDList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIDListAccess().getVirAssignment_1_1()); }
	(rule__IDList__VirAssignment_1_1)
	{ after(grammarAccess.getIDListAccess().getVirAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IDList__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IDList__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IDList__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIDListAccess().getListAssignment_1_2()); }
	(rule__IDList__ListAssignment_1_2)
	{ after(grammarAccess.getIDListAccess().getListAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__0__Impl
	rule__VarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getSignatureAssignment_0()); }
	(rule__VarDecl__SignatureAssignment_0)
	{ after(grammarAccess.getVarDeclAccess().getSignatureAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__1__Impl
	rule__VarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getAlternatives_1()); }
	(rule__VarDecl__Alternatives_1)?
	{ after(grammarAccess.getVarDeclAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getGroup_2()); }
	(rule__VarDecl__Group_2__0)?
	{ after(grammarAccess.getVarDeclAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_2__0__Impl
	rule__VarDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getArrayAssignment_2_0()); }
	(rule__VarDecl__ArrayAssignment_2_0)?
	{ after(grammarAccess.getVarDeclAccess().getArrayAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getExpressaoAssignment_2_1()); }
	(rule__VarDecl__ExpressaoAssignment_2_1)
	{ after(grammarAccess.getVarDeclAccess().getExpressaoAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SignatureDel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignatureDel__Group__0__Impl
	rule__SignatureDel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignatureDel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureDelAccess().getTipoDeclAssignment_0()); }
	(rule__SignatureDel__TipoDeclAssignment_0)
	{ after(grammarAccess.getSignatureDelAccess().getTipoDeclAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignatureDel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignatureDel__Group__1__Impl
	rule__SignatureDel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignatureDel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureDelAccess().getIdAssignment_1()); }
	(rule__SignatureDel__IdAssignment_1)
	{ after(grammarAccess.getSignatureDelAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignatureDel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignatureDel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignatureDel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureDelAccess().getTypeAssignment_2()); }
	(rule__SignatureDel__TypeAssignment_2)?
	{ after(grammarAccess.getSignatureDelAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getIdAssignment_0()); }
	(rule__Assignment__IdAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getGroup_1()); }
	(rule__Assignment__Group_1__0)?
	{ after(grammarAccess.getAssignmentAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
	rule__Assignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAlternatives_2()); }
	(rule__Assignment__Alternatives_2)
	{ after(grammarAccess.getAssignmentAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpressaoAssignment_3()); }
	(rule__Assignment__ExpressaoAssignment_3)
	{ after(grammarAccess.getAssignmentAccess().getExpressaoAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1__0__Impl
	rule__Assignment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getAssignmentAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1__1__Impl
	rule__Assignment__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getQtdAssignment_1_1()); }
	(rule__Assignment__QtdAssignment_1_1)
	{ after(grammarAccess.getAssignmentAccess().getQtdAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getAssignmentAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRESSAOLINHA__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EXPRESSAOLINHA__Group_0__0__Impl
	rule__EXPRESSAOLINHA__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAOLINHA__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEXPRESSAOLINHAAccess().getExpAssignment_0_0()); }
	(rule__EXPRESSAOLINHA__ExpAssignment_0_0)
	{ after(grammarAccess.getEXPRESSAOLINHAAccess().getExpAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAOLINHA__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EXPRESSAOLINHA__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAOLINHA__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEXPRESSAOLINHAAccess().getExplinhaAssignment_0_1()); }
	(rule__EXPRESSAOLINHA__ExplinhaAssignment_0_1)
	{ after(grammarAccess.getEXPRESSAOLINHAAccess().getExplinhaAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRESSAO__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EXPRESSAO__Group_0__0__Impl
	rule__EXPRESSAO__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEXPRESSAOAccess().getEXPRESSAOAction_0_0()); }
	()
	{ after(grammarAccess.getEXPRESSAOAccess().getEXPRESSAOAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EXPRESSAO__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEXPRESSAOAccess().getDeclFunctionAssignment_0_1()); }
	(rule__EXPRESSAO__DeclFunctionAssignment_0_1)
	{ after(grammarAccess.getEXPRESSAOAccess().getDeclFunctionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStmt__Group__0__Impl
	rule__ReturnStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStmtAccess().getReturnStmtAction_0()); }
	()
	{ after(grammarAccess.getReturnStmtAccess().getReturnStmtAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStmt__Group__1__Impl
	rule__ReturnStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStmtAccess().getReturnKeyword_1()); }
	'return'
	{ after(grammarAccess.getReturnStmtAccess().getReturnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStmtAccess().getAlternatives_2()); }
	(rule__ReturnStmt__Alternatives_2)?
	{ after(grammarAccess.getReturnStmtAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group__0__Impl
	rule__ArrayValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getArrayValueAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group__1__Impl
	rule__ArrayValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getLitAssignment_1()); }
	(rule__ArrayValue__LitAssignment_1)
	{ after(grammarAccess.getArrayValueAccess().getLitAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getArrayValueAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteraisList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteraisList__Group_1__0__Impl
	rule__LiteraisList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteraisList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteraisListAccess().getLitAssignment_1_0()); }
	(rule__LiteraisList__LitAssignment_1_0)
	{ after(grammarAccess.getLiteraisListAccess().getLitAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteraisList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteraisList__Group_1__1__Impl
	rule__LiteraisList__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteraisList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteraisListAccess().getVirAssignment_1_1()); }
	(rule__LiteraisList__VirAssignment_1_1)
	{ after(grammarAccess.getLiteraisListAccess().getVirAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteraisList__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteraisList__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteraisList__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteraisListAccess().getLitAssignment_1_2()); }
	(rule__LiteraisList__LitAssignment_1_2)
	{ after(grammarAccess.getLiteraisListAccess().getLitAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BINARY_EXP__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BINARY_EXP__Group__0__Impl
	rule__BINARY_EXP__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBINARY_EXPAccess().getBINARY_EXPAction_0()); }
	()
	{ after(grammarAccess.getBINARY_EXPAccess().getBINARY_EXPAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BINARY_EXP__Group__1__Impl
	rule__BINARY_EXP__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBINARY_EXPAccess().getAlternatives_1()); }
	(rule__BINARY_EXP__Alternatives_1)
	{ after(grammarAccess.getBINARY_EXPAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BINARY_EXP__Group__2__Impl
	rule__BINARY_EXP__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBINARY_EXPAccess().getAlternatives_2()); }
	(rule__BINARY_EXP__Alternatives_2)
	{ after(grammarAccess.getBINARY_EXPAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BINARY_EXP__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBINARY_EXPAccess().getAlternatives_3()); }
	(rule__BINARY_EXP__Alternatives_3)
	{ after(grammarAccess.getBINARY_EXPAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__0__Impl
	rule__FunctionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctionTypeAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__1__Impl
	rule__FunctionType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getNomeAssignment_1()); }
	(rule__FunctionType__NomeAssignment_1)
	{ after(grammarAccess.getFunctionTypeAccess().getNomeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__2__Impl
	rule__FunctionType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getAssinaturaAssignment_2()); }
	(rule__FunctionType__AssinaturaAssignment_2)
	{ after(grammarAccess.getFunctionTypeAccess().getAssinaturaAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getBlocoAssignment_3()); }
	(rule__FunctionType__BlocoAssignment_3)?
	{ after(grammarAccess.getFunctionTypeAccess().getBlocoAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__0__Impl
	rule__Signature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getSignatureAction_0()); }
	()
	{ after(grammarAccess.getSignatureAccess().getSignatureAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__1__Impl
	rule__Signature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getParamsAssignment_1()); }
	(rule__Signature__ParamsAssignment_1)
	{ after(grammarAccess.getSignatureAccess().getParamsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getRetornoAssignment_2()); }
	(rule__Signature__RetornoAssignment_2)?
	{ after(grammarAccess.getSignatureAccess().getRetornoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__0__Impl
	rule__Parameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParametersAction_0()); }
	()
	{ after(grammarAccess.getParametersAccess().getParametersAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__1__Impl
	rule__Parameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getABRE_PARENTESESParserRuleCall_1()); }
	ruleABRE_PARENTESES
	{ after(grammarAccess.getParametersAccess().getABRE_PARENTESESParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__2__Impl
	rule__Parameters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParamsAssignment_2()); }
	(rule__Parameters__ParamsAssignment_2)?
	{ after(grammarAccess.getParametersAccess().getParamsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getFECHA_PARENTESESParserRuleCall_3()); }
	ruleFECHA_PARENTESES
	{ after(grammarAccess.getParametersAccess().getFECHA_PARENTESESParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__0__Impl
	rule__IfCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfConditionAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__1__Impl
	rule__IfCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getCondAssignment_1()); }
	(rule__IfCondition__CondAssignment_1)
	{ after(grammarAccess.getIfConditionAccess().getCondAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__2__Impl
	rule__IfCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getIfConditionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__3__Impl
	rule__IfCondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getThenAssignment_3()); }
	(rule__IfCondition__ThenAssignment_3)*
	{ after(grammarAccess.getIfConditionAccess().getThenAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getIfConditionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseIfCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfCondition__Group__0__Impl
	rule__ElseIfCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfConditionAccess().getElseKeyword_0()); }
	('else')
	{ after(grammarAccess.getElseIfConditionAccess().getElseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfConditionAccess().getIfConditionParserRuleCall_1()); }
	ruleIfCondition
	{ after(grammarAccess.getElseIfConditionAccess().getIfConditionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseCondition__Group__0__Impl
	rule__ElseCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseConditionAccess().getElseConditionAction_0()); }
	()
	{ after(grammarAccess.getElseConditionAccess().getElseConditionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseConditionAccess().getGroup_1()); }
	(rule__ElseCondition__Group_1__0)
	{ after(grammarAccess.getElseConditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseCondition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseCondition__Group_1__0__Impl
	rule__ElseCondition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseConditionAccess().getElseKeyword_1_0()); }
	('else')
	{ after(grammarAccess.getElseConditionAccess().getElseKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseCondition__Group_1__1__Impl
	rule__ElseCondition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseConditionAccess().getLeftCurlyBracketKeyword_1_1()); }
	'{'
	{ after(grammarAccess.getElseConditionAccess().getLeftCurlyBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseCondition__Group_1__2__Impl
	rule__ElseCondition__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseConditionAccess().getThenAssignment_1_2()); }
	(rule__ElseCondition__ThenAssignment_1_2)*
	{ after(grammarAccess.getElseConditionAccess().getThenAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseCondition__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseConditionAccess().getRightCurlyBracketKeyword_1_3()); }
	'}'
	{ after(grammarAccess.getElseConditionAccess().getRightCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BLOCK__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLOCK__Group__0__Impl
	rule__BLOCK__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLOCKAccess().getBLOCKAction_0()); }
	()
	{ after(grammarAccess.getBLOCKAccess().getBLOCKAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLOCK__Group__1__Impl
	rule__BLOCK__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLOCKAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBLOCKAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLOCK__Group__2__Impl
	rule__BLOCK__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLOCKAccess().getListaDeComandosAssignment_2()); }
	(rule__BLOCK__ListaDeComandosAssignment_2)*
	{ after(grammarAccess.getBLOCKAccess().getListaDeComandosAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLOCK__Group__3__Impl
	rule__BLOCK__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLOCKAccess().getRetornoAssignment_3()); }
	(rule__BLOCK__RetornoAssignment_3)?
	{ after(grammarAccess.getBLOCKAccess().getRetornoAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLOCK__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLOCKAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getBLOCKAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PARAMETERS_LIST__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETERS_LIST__Group__0__Impl
	rule__PARAMETERS_LIST__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERS_LISTAccess().getPARAMETERS_LISTAction_0()); }
	()
	{ after(grammarAccess.getPARAMETERS_LISTAccess().getPARAMETERS_LISTAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETERS_LIST__Group__1__Impl
	rule__PARAMETERS_LIST__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERS_LISTAccess().getParamsAssignment_1()); }
	(rule__PARAMETERS_LIST__ParamsAssignment_1)
	{ after(grammarAccess.getPARAMETERS_LISTAccess().getParamsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETERS_LIST__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERS_LISTAccess().getGroup_2()); }
	(rule__PARAMETERS_LIST__Group_2__0)*
	{ after(grammarAccess.getPARAMETERS_LISTAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PARAMETERS_LIST__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETERS_LIST__Group_2__0__Impl
	rule__PARAMETERS_LIST__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERS_LISTAccess().getVirAssignment_2_0()); }
	(rule__PARAMETERS_LIST__VirAssignment_2_0)
	{ after(grammarAccess.getPARAMETERS_LISTAccess().getVirAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETERS_LIST__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERS_LISTAccess().getParamsAssignment_2_1()); }
	(rule__PARAMETERS_LIST__ParamsAssignment_2_1)
	{ after(grammarAccess.getPARAMETERS_LISTAccess().getParamsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PARAMETER__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETER__Group_0__0__Impl
	rule__PARAMETER__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERAccess().getPARAMETERAction_0_0()); }
	()
	{ after(grammarAccess.getPARAMETERAccess().getPARAMETERAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETER__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERAccess().getBasicoAssignment_0_1()); }
	(rule__PARAMETER__BasicoAssignment_0_1)
	{ after(grammarAccess.getPARAMETERAccess().getBasicoAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PARAMETER__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETER__Group_1__0__Impl
	rule__PARAMETER__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERAccess().getIdAssignment_1_0()); }
	(rule__PARAMETER__IdAssignment_1_0)
	{ after(grammarAccess.getPARAMETERAccess().getIdAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETER__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERAccess().getTipoAssignment_1_1()); }
	(rule__PARAMETER__TipoAssignment_1_1)?
	{ after(grammarAccess.getPARAMETERAccess().getTipoAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Types__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_0__0__Impl
	rule__Types__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getTypesAction_0_0()); }
	()
	{ after(grammarAccess.getTypesAccess().getTypesAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getBasicAssignment_0_1()); }
	(rule__Types__BasicAssignment_0_1)
	{ after(grammarAccess.getTypesAccess().getBasicAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__0__Impl
	rule__ArrayType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__1__Impl
	rule__ArrayType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getQtdAssignment_1()); }
	(rule__ArrayType__QtdAssignment_1)?
	{ after(grammarAccess.getArrayTypeAccess().getQtdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__2__Impl
	rule__ArrayType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getBasicAssignment_3()); }
	(rule__ArrayType__BasicAssignment_3)
	{ after(grammarAccess.getArrayTypeAccess().getBasicAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getIdAssignment_0()); }
	(rule__FunctionCall__IdAssignment_0)
	{ after(grammarAccess.getFunctionCallAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getParamsAssignment_2()); }
	(rule__FunctionCall__ParamsAssignment_2)?
	{ after(grammarAccess.getFunctionCallAccess().getParamsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BOOL_OP__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BOOL_OP__Group_0__0__Impl
	rule__BOOL_OP__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOL_OP__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBOOL_OPAccess().getBOOL_OPAction_0_0()); }
	()
	{ after(grammarAccess.getBOOL_OPAccess().getBOOL_OPAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOL_OP__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BOOL_OP__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOL_OP__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBOOL_OPAccess().getAmpersandAmpersandKeyword_0_1()); }
	('&&')
	{ after(grammarAccess.getBOOL_OPAccess().getAmpersandAmpersandKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BOOL_OP__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BOOL_OP__Group_1__0__Impl
	rule__BOOL_OP__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOL_OP__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBOOL_OPAccess().getBOOL_OPAction_1_0()); }
	()
	{ after(grammarAccess.getBOOL_OPAccess().getBOOL_OPAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOL_OP__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BOOL_OP__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOL_OP__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBOOL_OPAccess().getVerticalLineVerticalLineKeyword_1_1()); }
	('||')
	{ after(grammarAccess.getBOOL_OPAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ARIT_EXPR__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARIT_EXPR__Group_0__0__Impl
	rule__ARIT_EXPR__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARIT_EXPRAccess().getAlternatives_0_0()); }
	(rule__ARIT_EXPR__Alternatives_0_0)
	{ after(grammarAccess.getARIT_EXPRAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARIT_EXPR__Group_0__1__Impl
	rule__ARIT_EXPR__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARIT_EXPRAccess().getOpAssignment_0_1()); }
	(rule__ARIT_EXPR__OpAssignment_0_1)
	{ after(grammarAccess.getARIT_EXPRAccess().getOpAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARIT_EXPR__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARIT_EXPRAccess().getAlternatives_0_2()); }
	(rule__ARIT_EXPR__Alternatives_0_2)
	{ after(grammarAccess.getARIT_EXPRAccess().getAlternatives_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ARIT_EXPR__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARIT_EXPR__Group_1__0__Impl
	rule__ARIT_EXPR__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARIT_EXPRAccess().getAlternatives_1_0()); }
	(rule__ARIT_EXPR__Alternatives_1_0)
	{ after(grammarAccess.getARIT_EXPRAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARIT_EXPR__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARIT_EXPRAccess().getAtrAssignment_1_1()); }
	(rule__ARIT_EXPR__AtrAssignment_1_1)
	{ after(grammarAccess.getARIT_EXPRAccess().getAtrAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ARIT_EXPR__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARIT_EXPR__Group_2__0__Impl
	rule__ARIT_EXPR__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARIT_EXPRAccess().getAtrAssignment_2_0()); }
	(rule__ARIT_EXPR__AtrAssignment_2_0)
	{ after(grammarAccess.getARIT_EXPRAccess().getAtrAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARIT_EXPR__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARIT_EXPRAccess().getAlternatives_2_1()); }
	(rule__ARIT_EXPR__Alternatives_2_1)
	{ after(grammarAccess.getARIT_EXPRAccess().getAlternatives_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__0__Impl
	rule__IfStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getIfAssignment_0()); }
	(rule__IfStmt__IfAssignment_0)
	{ after(grammarAccess.getIfStmtAccess().getIfAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__1__Impl
	rule__IfStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getElseifAssignment_1()); }
	(rule__IfStmt__ElseifAssignment_1)*
	{ after(grammarAccess.getIfStmtAccess().getElseifAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getElseAssignment_2()); }
	(rule__IfStmt__ElseAssignment_2)?
	{ after(grammarAccess.getIfStmtAccess().getElseAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Init__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitAccess().getElementsGoDeclParserRuleCall_0()); }
		ruleGoDecl
		{ after(grammarAccess.getInitAccess().getElementsGoDeclParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_VALUE__VerdadeiroAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLEAN_VALUEAccess().getVerdadeiroTrueKeyword_0_0()); }
		(
			{ before(grammarAccess.getBOOLEAN_VALUEAccess().getVerdadeiroTrueKeyword_0_0()); }
			'true'
			{ after(grammarAccess.getBOOLEAN_VALUEAccess().getVerdadeiroTrueKeyword_0_0()); }
		)
		{ after(grammarAccess.getBOOLEAN_VALUEAccess().getVerdadeiroTrueKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_VALUE__FalsoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLEAN_VALUEAccess().getFalsoFalseKeyword_1_0()); }
		(
			{ before(grammarAccess.getBOOLEAN_VALUEAccess().getFalsoFalseKeyword_1_0()); }
			'false'
			{ after(grammarAccess.getBOOLEAN_VALUEAccess().getFalsoFalseKeyword_1_0()); }
		)
		{ after(grammarAccess.getBOOLEAN_VALUEAccess().getFalsoFalseKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoDecl__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoDeclAccess().getVarVarDeclParserRuleCall_0_0()); }
		ruleVarDecl
		{ after(grammarAccess.getGoDeclAccess().getVarVarDeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoDecl__FuncAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoDeclAccess().getFuncFunctionTypeParserRuleCall_1_0()); }
		ruleFunctionType
		{ after(grammarAccess.getGoDeclAccess().getFuncFunctionTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoDecl__ExpressaoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoDeclAccess().getExpressaoEXPRESSAOLINHAParserRuleCall_2_0()); }
		ruleEXPRESSAOLINHA
		{ after(grammarAccess.getGoDeclAccess().getExpressaoEXPRESSAOLINHAParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDecl__ClauseAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForDeclAccess().getClauseForClauseParserRuleCall_1_0_0()); }
		ruleForClause
		{ after(grammarAccess.getForDeclAccess().getClauseForClauseParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDecl__RangeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForDeclAccess().getRangeRangeDeclParserRuleCall_1_1_0()); }
		ruleRangeDecl
		{ after(grammarAccess.getForDeclAccess().getRangeRangeDeclParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDecl__ComandosAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForDeclAccess().getComandosGoDeclParserRuleCall_3_0()); }
		ruleGoDecl
		{ after(grammarAccess.getForDeclAccess().getComandosGoDeclParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDecl__IdListAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeDeclAccess().getIdListIDListParserRuleCall_1_0()); }
		ruleIDList
		{ after(grammarAccess.getRangeDeclAccess().getIdListIDListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDecl__IgualAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeDeclAccess().getIgualIGUALParserRuleCall_2_0_0()); }
		ruleIGUAL
		{ after(grammarAccess.getRangeDeclAccess().getIgualIGUALParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDecl__OpAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeDeclAccess().getOpPONTOSIGUALParserRuleCall_2_1_0()); }
		rulePONTOSIGUAL
		{ after(grammarAccess.getRangeDeclAccess().getOpPONTOSIGUALParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDecl__VariavelAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeDeclAccess().getVariavelVarCallParserRuleCall_4_0_0()); }
		ruleVarCall
		{ after(grammarAccess.getRangeDeclAccess().getVariavelVarCallParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeDecl__FuncAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeDeclAccess().getFuncFunctionCallParserRuleCall_4_1_0()); }
		ruleFunctionCall
		{ after(grammarAccess.getRangeDeclAccess().getFuncFunctionCallParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__InitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForClauseAccess().getInitInitStmtParserRuleCall_1_0()); }
		ruleInitStmt
		{ after(grammarAccess.getForClauseAccess().getInitInitStmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__ConditionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForClauseAccess().getConditionConditionParserRuleCall_3_0()); }
		ruleCondition
		{ after(grammarAccess.getForClauseAccess().getConditionConditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__PostAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForClauseAccess().getPostPostStmtParserRuleCall_5_0()); }
		rulePostStmt
		{ after(grammarAccess.getForClauseAccess().getPostPostStmtParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitStmt__VarDeclAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitStmtAccess().getVarDeclVarDeclParserRuleCall_0()); }
		ruleVarDecl
		{ after(grammarAccess.getInitStmtAccess().getVarDeclVarDeclParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostStmt__ArtAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostStmtAccess().getArtARIT_EXPRParserRuleCall_0()); }
		ruleARIT_EXPR
		{ after(grammarAccess.getPostStmtAccess().getArtARIT_EXPRParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Expr1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getExpr1EXPRESSAOParserRuleCall_0_0()); }
		ruleEXPRESSAO
		{ after(grammarAccess.getConditionAccess().getExpr1EXPRESSAOParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ComparadorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getComparadorCOMPARISONParserRuleCall_1_0()); }
		ruleCOMPARISON
		{ after(grammarAccess.getConditionAccess().getComparadorCOMPARISONParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Expr2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getExpr2EXPRESSAOParserRuleCall_2_0()); }
		ruleEXPRESSAO
		{ after(grammarAccess.getConditionAccess().getExpr2EXPRESSAOParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IDList__IdListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIDListAccess().getIdListIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getIDListAccess().getIdListIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IDList__IdListAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIDListAccess().getIdListIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getIDListAccess().getIdListIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IDList__VirAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIDListAccess().getVirVIRGULATerminalRuleCall_1_1_0()); }
		RULE_VIRGULA
		{ after(grammarAccess.getIDListAccess().getVirVIRGULATerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IDList__ListAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIDListAccess().getListIDListParserRuleCall_1_2_0()); }
		ruleIDList
		{ after(grammarAccess.getIDListAccess().getListIDListParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__SignatureAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getSignatureSignatureDelParserRuleCall_0_0()); }
		ruleSignatureDel
		{ after(grammarAccess.getVarDeclAccess().getSignatureSignatureDelParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__AtribuicaoAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getAtribuicaoIGUALParserRuleCall_1_0_0()); }
		ruleIGUAL
		{ after(grammarAccess.getVarDeclAccess().getAtribuicaoIGUALParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__ProntAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getProntPONTOSIGUALParserRuleCall_1_1_0()); }
		rulePONTOSIGUAL
		{ after(grammarAccess.getVarDeclAccess().getProntPONTOSIGUALParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__ArrayAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getArrayArrayTypeParserRuleCall_2_0_0()); }
		ruleArrayType
		{ after(grammarAccess.getVarDeclAccess().getArrayArrayTypeParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__ExpressaoAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getExpressaoEXPRESSAOLINHAParserRuleCall_2_1_0()); }
		ruleEXPRESSAOLINHA
		{ after(grammarAccess.getVarDeclAccess().getExpressaoEXPRESSAOLINHAParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignatureDel__TipoDeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureDelAccess().getTipoDeclTIPOParserRuleCall_0_0()); }
		ruleTIPO
		{ after(grammarAccess.getSignatureDelAccess().getTipoDeclTIPOParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignatureDel__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureDelAccess().getIdIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSignatureDelAccess().getIdIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignatureDel__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureDelAccess().getTypeTypesParserRuleCall_2_0()); }
		ruleTypes
		{ after(grammarAccess.getSignatureDelAccess().getTypeTypesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getIdIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAssignmentAccess().getIdIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__QtdAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getQtdNUMEROTerminalRuleCall_1_1_0()); }
		RULE_NUMERO
		{ after(grammarAccess.getAssignmentAccess().getQtdNUMEROTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__IgualAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getIgualIGUALParserRuleCall_2_0_0()); }
		ruleIGUAL
		{ after(grammarAccess.getAssignmentAccess().getIgualIGUALParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__DoisAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getDoisPONTOSIGUALParserRuleCall_2_1_0()); }
		rulePONTOSIGUAL
		{ after(grammarAccess.getAssignmentAccess().getDoisPONTOSIGUALParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressaoAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpressaoEXPRESSAOLINHAParserRuleCall_3_0()); }
		ruleEXPRESSAOLINHA
		{ after(grammarAccess.getAssignmentAccess().getExpressaoEXPRESSAOLINHAParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TIPO__VariavelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTIPOAccess().getVariavelVarParserRuleCall_0_0()); }
		ruleVar
		{ after(grammarAccess.getTIPOAccess().getVariavelVarParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TIPO__ConstanteAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTIPOAccess().getConstanteConstParserRuleCall_1_0()); }
		ruleConst
		{ after(grammarAccess.getTIPOAccess().getConstanteConstParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__VarAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getVarVarKeyword_0()); }
		(
			{ before(grammarAccess.getVarAccess().getVarVarKeyword_0()); }
			'var'
			{ after(grammarAccess.getVarAccess().getVarVarKeyword_0()); }
		)
		{ after(grammarAccess.getVarAccess().getVarVarKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__ConstAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstAccess().getConstConstKeyword_0()); }
		(
			{ before(grammarAccess.getConstAccess().getConstConstKeyword_0()); }
			'const'
			{ after(grammarAccess.getConstAccess().getConstConstKeyword_0()); }
		)
		{ after(grammarAccess.getConstAccess().getConstConstKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IGUAL__IgualAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIGUALAccess().getIgualEqualsSignKeyword_0()); }
		(
			{ before(grammarAccess.getIGUALAccess().getIgualEqualsSignKeyword_0()); }
			'='
			{ after(grammarAccess.getIGUALAccess().getIgualEqualsSignKeyword_0()); }
		)
		{ after(grammarAccess.getIGUALAccess().getIgualEqualsSignKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PONTOSIGUAL__OpAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPONTOSIGUALAccess().getOpColonEqualsSignKeyword_0()); }
		(
			{ before(grammarAccess.getPONTOSIGUALAccess().getOpColonEqualsSignKeyword_0()); }
			':='
			{ after(grammarAccess.getPONTOSIGUALAccess().getOpColonEqualsSignKeyword_0()); }
		)
		{ after(grammarAccess.getPONTOSIGUALAccess().getOpColonEqualsSignKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAOLINHA__ExpAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOLINHAAccess().getExpEXPRESSAOParserRuleCall_0_0_0()); }
		ruleEXPRESSAO
		{ after(grammarAccess.getEXPRESSAOLINHAAccess().getExpEXPRESSAOParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAOLINHA__ExplinhaAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOLINHAAccess().getExplinhaEXPRESSAOLINHAParserRuleCall_0_1_0()); }
		ruleEXPRESSAOLINHA
		{ after(grammarAccess.getEXPRESSAOLINHAAccess().getExplinhaEXPRESSAOLINHAParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAOLINHA__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOLINHAAccess().getExpEXPRESSAOParserRuleCall_1_0()); }
		ruleEXPRESSAO
		{ after(grammarAccess.getEXPRESSAOLINHAAccess().getExpEXPRESSAOParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__DeclFunctionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getDeclFunctionFunctionTypeParserRuleCall_0_1_0()); }
		ruleFunctionType
		{ after(grammarAccess.getEXPRESSAOAccess().getDeclFunctionFunctionTypeParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__Binary_expAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getBinary_expBINARY_EXPParserRuleCall_1_0()); }
		ruleBINARY_EXP
		{ after(grammarAccess.getEXPRESSAOAccess().getBinary_expBINARY_EXPParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__BasicAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getBasicLITERAIS_BASICOSParserRuleCall_2_0()); }
		ruleLITERAIS_BASICOS
		{ after(grammarAccess.getEXPRESSAOAccess().getBasicLITERAIS_BASICOSParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__AssignmentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getAssignmentAssignmentParserRuleCall_3_0()); }
		ruleAssignment
		{ after(grammarAccess.getEXPRESSAOAccess().getAssignmentAssignmentParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__ForAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getForForDeclParserRuleCall_4_0()); }
		ruleForDecl
		{ after(grammarAccess.getEXPRESSAOAccess().getForForDeclParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__ArrayValueAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getArrayValueArrayValueParserRuleCall_5_0()); }
		ruleArrayValue
		{ after(grammarAccess.getEXPRESSAOAccess().getArrayValueArrayValueParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__VariaveisAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getVariaveisVarDeclParserRuleCall_6_0()); }
		ruleVarDecl
		{ after(grammarAccess.getEXPRESSAOAccess().getVariaveisVarDeclParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__ChamAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getChamChamadaParserRuleCall_7_0()); }
		ruleChamada
		{ after(grammarAccess.getEXPRESSAOAccess().getChamChamadaParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__IfAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getIfIfStmtParserRuleCall_8_0()); }
		ruleIfStmt
		{ after(grammarAccess.getEXPRESSAOAccess().getIfIfStmtParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__BasicAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStmtAccess().getBasicLITERAIS_BASICOSParserRuleCall_2_0_0()); }
		ruleLITERAIS_BASICOS
		{ after(grammarAccess.getReturnStmtAccess().getBasicLITERAIS_BASICOSParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__FuncAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStmtAccess().getFuncFunctionCallParserRuleCall_2_1_0()); }
		ruleFunctionCall
		{ after(grammarAccess.getReturnStmtAccess().getFuncFunctionCallParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__IdVarAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStmtAccess().getIdVarVarCallParserRuleCall_2_2_0()); }
		ruleVarCall
		{ after(grammarAccess.getReturnStmtAccess().getIdVarVarCallParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__LitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayValueAccess().getLitLiteraisListParserRuleCall_1_0()); }
		ruleLiteraisList
		{ after(grammarAccess.getArrayValueAccess().getLitLiteraisListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteraisList__LitAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteraisListAccess().getLitLITERAIS_BASICOSParserRuleCall_0_0()); }
		ruleLITERAIS_BASICOS
		{ after(grammarAccess.getLiteraisListAccess().getLitLITERAIS_BASICOSParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteraisList__LitAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteraisListAccess().getLitLITERAIS_BASICOSParserRuleCall_1_0_0()); }
		ruleLITERAIS_BASICOS
		{ after(grammarAccess.getLiteraisListAccess().getLitLITERAIS_BASICOSParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteraisList__VirAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteraisListAccess().getVirVIRGULATerminalRuleCall_1_1_0()); }
		RULE_VIRGULA
		{ after(grammarAccess.getLiteraisListAccess().getVirVIRGULATerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteraisList__LitAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteraisListAccess().getLitLiteraisListParserRuleCall_1_2_0()); }
		ruleLiteraisList
		{ after(grammarAccess.getLiteraisListAccess().getLitLiteraisListParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LITERAIS_BASICOS__NumeroAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getNumeroNUMEROTerminalRuleCall_0_0()); }
		RULE_NUMERO
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getNumeroNUMEROTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LITERAIS_BASICOS__StringAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getStringSTRING_DECLTerminalRuleCall_1_0()); }
		RULE_STRING_DECL
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getStringSTRING_DECLTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LITERAIS_BASICOS__BooleanoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getBooleanoBOOLEAN_VALUEParserRuleCall_2_0()); }
		ruleBOOLEAN_VALUE
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getBooleanoBOOLEAN_VALUEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__BasicAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getBasicLITERAIS_BASICOSParserRuleCall_1_0_0()); }
		ruleLITERAIS_BASICOS
		{ after(grammarAccess.getBINARY_EXPAccess().getBasicLITERAIS_BASICOSParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__VarCalAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getVarCalVarCallParserRuleCall_1_1_0()); }
		ruleVarCall
		{ after(grammarAccess.getBINARY_EXPAccess().getVarCalVarCallParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__FuncAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getFuncFunctionCallParserRuleCall_1_2_0()); }
		ruleFunctionCall
		{ after(grammarAccess.getBINARY_EXPAccess().getFuncFunctionCallParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__BoolAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getBoolBOOL_OPParserRuleCall_2_0_0()); }
		ruleBOOL_OP
		{ after(grammarAccess.getBINARY_EXPAccess().getBoolBOOL_OPParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__AritAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getAritARIT_OPParserRuleCall_2_1_0()); }
		ruleARIT_OP
		{ after(grammarAccess.getBINARY_EXPAccess().getAritARIT_OPParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__BasicAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getBasicLITERAIS_BASICOSParserRuleCall_3_0_0()); }
		ruleLITERAIS_BASICOS
		{ after(grammarAccess.getBINARY_EXPAccess().getBasicLITERAIS_BASICOSParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__VarCalAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getVarCalVarCallParserRuleCall_3_1_0()); }
		ruleVarCall
		{ after(grammarAccess.getBINARY_EXPAccess().getVarCalVarCallParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_EXP__FuncAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_EXPAccess().getFuncFunctionCallParserRuleCall_3_2_0()); }
		ruleFunctionCall
		{ after(grammarAccess.getBINARY_EXPAccess().getFuncFunctionCallParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__NomeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getNomeIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionTypeAccess().getNomeIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__AssinaturaAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getAssinaturaSignatureParserRuleCall_2_0()); }
		ruleSignature
		{ after(grammarAccess.getFunctionTypeAccess().getAssinaturaSignatureParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__BlocoAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getBlocoBLOCKParserRuleCall_3_0()); }
		ruleBLOCK
		{ after(grammarAccess.getFunctionTypeAccess().getBlocoBLOCKParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__ParamsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getParamsParametersParserRuleCall_1_0()); }
		ruleParameters
		{ after(grammarAccess.getSignatureAccess().getParamsParametersParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__RetornoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getRetornoTypesParserRuleCall_2_0()); }
		ruleTypes
		{ after(grammarAccess.getSignatureAccess().getRetornoTypesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ParamsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersAccess().getParamsPARAMETERS_LISTParserRuleCall_2_0()); }
		rulePARAMETERS_LIST
		{ after(grammarAccess.getParametersAccess().getParamsPARAMETERS_LISTParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__CondAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfConditionAccess().getCondConditionParserRuleCall_1_0()); }
		ruleCondition
		{ after(grammarAccess.getIfConditionAccess().getCondConditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__ThenAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfConditionAccess().getThenEXPRESSAOParserRuleCall_3_0()); }
		ruleEXPRESSAO
		{ after(grammarAccess.getIfConditionAccess().getThenEXPRESSAOParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__ThenAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseConditionAccess().getThenEXPRESSAOParserRuleCall_1_2_0()); }
		ruleEXPRESSAO
		{ after(grammarAccess.getElseConditionAccess().getThenEXPRESSAOParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__ListaDeComandosAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLOCKAccess().getListaDeComandosEXPRESSAOParserRuleCall_2_0()); }
		ruleEXPRESSAO
		{ after(grammarAccess.getBLOCKAccess().getListaDeComandosEXPRESSAOParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__RetornoAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLOCKAccess().getRetornoReturnStmtParserRuleCall_3_0()); }
		ruleReturnStmt
		{ after(grammarAccess.getBLOCKAccess().getRetornoReturnStmtParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__ParamsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPARAMETERS_LISTAccess().getParamsPARAMETERParserRuleCall_1_0()); }
		rulePARAMETER
		{ after(grammarAccess.getPARAMETERS_LISTAccess().getParamsPARAMETERParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__VirAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPARAMETERS_LISTAccess().getVirVIRGULATerminalRuleCall_2_0_0()); }
		RULE_VIRGULA
		{ after(grammarAccess.getPARAMETERS_LISTAccess().getVirVIRGULATerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__ParamsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPARAMETERS_LISTAccess().getParamsPARAMETERParserRuleCall_2_1_0()); }
		rulePARAMETER
		{ after(grammarAccess.getPARAMETERS_LISTAccess().getParamsPARAMETERParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__BasicoAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPARAMETERAccess().getBasicoLITERAIS_BASICOSParserRuleCall_0_1_0()); }
		ruleLITERAIS_BASICOS
		{ after(grammarAccess.getPARAMETERAccess().getBasicoLITERAIS_BASICOSParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__IdAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPARAMETERAccess().getIdIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPARAMETERAccess().getIdIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__TipoAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPARAMETERAccess().getTipoTypesParserRuleCall_1_1_0()); }
		ruleTypes
		{ after(grammarAccess.getPARAMETERAccess().getTipoTypesParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__BasicAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypesAccess().getBasicBasicTypeParserRuleCall_0_1_0()); }
		ruleBasicType
		{ after(grammarAccess.getTypesAccess().getBasicBasicTypeParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__ArrayAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypesAccess().getArrayArrayTypeParserRuleCall_1_0()); }
		ruleArrayType
		{ after(grammarAccess.getTypesAccess().getArrayArrayTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__QtdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getQtdNUMEROTerminalRuleCall_1_0()); }
		RULE_NUMERO
		{ after(grammarAccess.getArrayTypeAccess().getQtdNUMEROTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__BasicAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getBasicBasicTypeParserRuleCall_3_0()); }
		ruleBasicType
		{ after(grammarAccess.getArrayTypeAccess().getBasicBasicTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__StringAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getStringStringKeyword_0_0()); }
		(
			{ before(grammarAccess.getBasicTypeAccess().getStringStringKeyword_0_0()); }
			'string'
			{ after(grammarAccess.getBasicTypeAccess().getStringStringKeyword_0_0()); }
		)
		{ after(grammarAccess.getBasicTypeAccess().getStringStringKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__IntAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getIntIntKeyword_1_0()); }
		(
			{ before(grammarAccess.getBasicTypeAccess().getIntIntKeyword_1_0()); }
			'int'
			{ after(grammarAccess.getBasicTypeAccess().getIntIntKeyword_1_0()); }
		)
		{ after(grammarAccess.getBasicTypeAccess().getIntIntKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__FloatAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getFloatFloatKeyword_2_0()); }
		(
			{ before(grammarAccess.getBasicTypeAccess().getFloatFloatKeyword_2_0()); }
			'float'
			{ after(grammarAccess.getBasicTypeAccess().getFloatFloatKeyword_2_0()); }
		)
		{ after(grammarAccess.getBasicTypeAccess().getFloatFloatKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__BooleanAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getBooleanBoolKeyword_3_0()); }
		(
			{ before(grammarAccess.getBasicTypeAccess().getBooleanBoolKeyword_3_0()); }
			'bool'
			{ after(grammarAccess.getBasicTypeAccess().getBooleanBoolKeyword_3_0()); }
		)
		{ after(grammarAccess.getBasicTypeAccess().getBooleanBoolKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarCall__IdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarCallAccess().getIdIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getVarCallAccess().getIdIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getIdIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionCallAccess().getIdIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParamsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getParamsPARAMETERS_LISTParserRuleCall_2_0()); }
		rulePARAMETERS_LIST
		{ after(grammarAccess.getFunctionCallAccess().getParamsPARAMETERS_LISTParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chamada__ChamAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChamadaAccess().getChamFunctionCallParserRuleCall_0_0()); }
		ruleFunctionCall
		{ after(grammarAccess.getChamadaAccess().getChamFunctionCallParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chamada__ChamAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChamadaAccess().getChamVarCallParserRuleCall_1_0()); }
		ruleVarCall
		{ after(grammarAccess.getChamadaAccess().getChamVarCallParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chamada__ChamAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChamadaAccess().getChamLITERAIS_BASICOSParserRuleCall_2_0()); }
		ruleLITERAIS_BASICOS
		{ after(grammarAccess.getChamadaAccess().getChamLITERAIS_BASICOSParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Num1Assignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getNum1NUMEROTerminalRuleCall_0_0_0_0()); }
		RULE_NUMERO
		{ after(grammarAccess.getARIT_EXPRAccess().getNum1NUMEROTerminalRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Var1Assignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getVar1VarCallParserRuleCall_0_0_1_0()); }
		ruleVarCall
		{ after(grammarAccess.getARIT_EXPRAccess().getVar1VarCallParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__OpAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getOpARIT_OPParserRuleCall_0_1_0()); }
		ruleARIT_OP
		{ after(grammarAccess.getARIT_EXPRAccess().getOpARIT_OPParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Num2Assignment_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getNum2NUMEROTerminalRuleCall_0_2_0_0()); }
		RULE_NUMERO
		{ after(grammarAccess.getARIT_EXPRAccess().getNum2NUMEROTerminalRuleCall_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__Var2Assignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getVar2VarCallParserRuleCall_0_2_1_0()); }
		ruleVarCall
		{ after(grammarAccess.getARIT_EXPRAccess().getVar2VarCallParserRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__NumAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getNumNUMEROTerminalRuleCall_1_0_0_0()); }
		RULE_NUMERO
		{ after(grammarAccess.getARIT_EXPRAccess().getNumNUMEROTerminalRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__VarAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getVarVarCallParserRuleCall_1_0_1_0()); }
		ruleVarCall
		{ after(grammarAccess.getARIT_EXPRAccess().getVarVarCallParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__AtrAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getAtrARIT_ATRParserRuleCall_1_1_0()); }
		ruleARIT_ATR
		{ after(grammarAccess.getARIT_EXPRAccess().getAtrARIT_ATRParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__AtrAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getAtrARIT_ATRParserRuleCall_2_0_0()); }
		ruleARIT_ATR
		{ after(grammarAccess.getARIT_EXPRAccess().getAtrARIT_ATRParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__NumAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getNumNUMEROTerminalRuleCall_2_1_0_0()); }
		RULE_NUMERO
		{ after(grammarAccess.getARIT_EXPRAccess().getNumNUMEROTerminalRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARIT_EXPR__VarAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARIT_EXPRAccess().getVarVarCallParserRuleCall_2_1_1_0()); }
		ruleVarCall
		{ after(grammarAccess.getARIT_EXPRAccess().getVarVarCallParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__IfAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getIfIfConditionParserRuleCall_0_0()); }
		ruleIfCondition
		{ after(grammarAccess.getIfStmtAccess().getIfIfConditionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ElseifAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getElseifElseIfConditionParserRuleCall_1_0()); }
		ruleElseIfCondition
		{ after(grammarAccess.getIfStmtAccess().getElseifElseIfConditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ElseAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getElseElseConditionParserRuleCall_2_0()); }
		ruleElseCondition
		{ after(grammarAccess.getIfStmtAccess().getElseElseConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON__IgualAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARISONAccess().getIgualEqualsSignEqualsSignKeyword_0_0()); }
		(
			{ before(grammarAccess.getCOMPARISONAccess().getIgualEqualsSignEqualsSignKeyword_0_0()); }
			'=='
			{ after(grammarAccess.getCOMPARISONAccess().getIgualEqualsSignEqualsSignKeyword_0_0()); }
		)
		{ after(grammarAccess.getCOMPARISONAccess().getIgualEqualsSignEqualsSignKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON__MaiorigualqueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARISONAccess().getMaiorigualqueGreaterThanSignEqualsSignKeyword_1_0()); }
		(
			{ before(grammarAccess.getCOMPARISONAccess().getMaiorigualqueGreaterThanSignEqualsSignKeyword_1_0()); }
			'>='
			{ after(grammarAccess.getCOMPARISONAccess().getMaiorigualqueGreaterThanSignEqualsSignKeyword_1_0()); }
		)
		{ after(grammarAccess.getCOMPARISONAccess().getMaiorigualqueGreaterThanSignEqualsSignKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON__MenorigualqueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARISONAccess().getMenorigualqueLessThanSignEqualsSignKeyword_2_0()); }
		(
			{ before(grammarAccess.getCOMPARISONAccess().getMenorigualqueLessThanSignEqualsSignKeyword_2_0()); }
			'<='
			{ after(grammarAccess.getCOMPARISONAccess().getMenorigualqueLessThanSignEqualsSignKeyword_2_0()); }
		)
		{ after(grammarAccess.getCOMPARISONAccess().getMenorigualqueLessThanSignEqualsSignKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON__MaiorqueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARISONAccess().getMaiorqueGreaterThanSignKeyword_3_0()); }
		(
			{ before(grammarAccess.getCOMPARISONAccess().getMaiorqueGreaterThanSignKeyword_3_0()); }
			'>'
			{ after(grammarAccess.getCOMPARISONAccess().getMaiorqueGreaterThanSignKeyword_3_0()); }
		)
		{ after(grammarAccess.getCOMPARISONAccess().getMaiorqueGreaterThanSignKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON__MenorqueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARISONAccess().getMenorqueLessThanSignKeyword_4_0()); }
		(
			{ before(grammarAccess.getCOMPARISONAccess().getMenorqueLessThanSignKeyword_4_0()); }
			'<'
			{ after(grammarAccess.getCOMPARISONAccess().getMenorqueLessThanSignKeyword_4_0()); }
		)
		{ after(grammarAccess.getCOMPARISONAccess().getMenorqueLessThanSignKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_VIRGULA : ',';

RULE_NUMERO : RULE_INT;

RULE_STRING_DECL : '"' (RULE_ID|RULE_NUMERO)* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

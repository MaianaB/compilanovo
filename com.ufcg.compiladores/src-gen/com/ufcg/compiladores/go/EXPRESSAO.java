/**
 * generated by Xtext 2.14.0
 */
package com.ufcg.compiladores.go;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>EXPRESSAO</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link com.ufcg.compiladores.go.EXPRESSAO#getDeclFunction <em>Decl Function</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.EXPRESSAO#getBinary_exp <em>Binary exp</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.EXPRESSAO#getBasic <em>Basic</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.EXPRESSAO#getAssignment <em>Assignment</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.EXPRESSAO#getFor <em>For</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.EXPRESSAO#getArrayValue <em>Array Value</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.EXPRESSAO#getVariaveis <em>Variaveis</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.EXPRESSAO#getCham <em>Cham</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.EXPRESSAO#getIf <em>If</em>}</li>
 * </ul>
 *
 * @see com.ufcg.compiladores.go.GoPackage#getEXPRESSAO()
 * @model
 * @generated
 */
public interface EXPRESSAO extends EObject
{
  /**
   * Returns the value of the '<em><b>Decl Function</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Decl Function</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Decl Function</em>' containment reference.
   * @see #setDeclFunction(FunctionType)
   * @see com.ufcg.compiladores.go.GoPackage#getEXPRESSAO_DeclFunction()
   * @model containment="true"
   * @generated
   */
  FunctionType getDeclFunction();

  /**
   * Sets the value of the '{@link com.ufcg.compiladores.go.EXPRESSAO#getDeclFunction <em>Decl Function</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Decl Function</em>' containment reference.
   * @see #getDeclFunction()
   * @generated
   */
  void setDeclFunction(FunctionType value);

  /**
   * Returns the value of the '<em><b>Binary exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Binary exp</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Binary exp</em>' containment reference.
   * @see #setBinary_exp(BINARY_EXP)
   * @see com.ufcg.compiladores.go.GoPackage#getEXPRESSAO_Binary_exp()
   * @model containment="true"
   * @generated
   */
  BINARY_EXP getBinary_exp();

  /**
   * Sets the value of the '{@link com.ufcg.compiladores.go.EXPRESSAO#getBinary_exp <em>Binary exp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Binary exp</em>' containment reference.
   * @see #getBinary_exp()
   * @generated
   */
  void setBinary_exp(BINARY_EXP value);

  /**
   * Returns the value of the '<em><b>Basic</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Basic</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Basic</em>' containment reference.
   * @see #setBasic(LITERAIS_BASICOS)
   * @see com.ufcg.compiladores.go.GoPackage#getEXPRESSAO_Basic()
   * @model containment="true"
   * @generated
   */
  LITERAIS_BASICOS getBasic();

  /**
   * Sets the value of the '{@link com.ufcg.compiladores.go.EXPRESSAO#getBasic <em>Basic</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Basic</em>' containment reference.
   * @see #getBasic()
   * @generated
   */
  void setBasic(LITERAIS_BASICOS value);

  /**
   * Returns the value of the '<em><b>Assignment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Assignment</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Assignment</em>' containment reference.
   * @see #setAssignment(Assignment)
   * @see com.ufcg.compiladores.go.GoPackage#getEXPRESSAO_Assignment()
   * @model containment="true"
   * @generated
   */
  Assignment getAssignment();

  /**
   * Sets the value of the '{@link com.ufcg.compiladores.go.EXPRESSAO#getAssignment <em>Assignment</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Assignment</em>' containment reference.
   * @see #getAssignment()
   * @generated
   */
  void setAssignment(Assignment value);

  /**
   * Returns the value of the '<em><b>For</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>For</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>For</em>' containment reference.
   * @see #setFor(ForDecl)
   * @see com.ufcg.compiladores.go.GoPackage#getEXPRESSAO_For()
   * @model containment="true"
   * @generated
   */
  ForDecl getFor();

  /**
   * Sets the value of the '{@link com.ufcg.compiladores.go.EXPRESSAO#getFor <em>For</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>For</em>' containment reference.
   * @see #getFor()
   * @generated
   */
  void setFor(ForDecl value);

  /**
   * Returns the value of the '<em><b>Array Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Array Value</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Array Value</em>' containment reference.
   * @see #setArrayValue(ArrayValue)
   * @see com.ufcg.compiladores.go.GoPackage#getEXPRESSAO_ArrayValue()
   * @model containment="true"
   * @generated
   */
  ArrayValue getArrayValue();

  /**
   * Sets the value of the '{@link com.ufcg.compiladores.go.EXPRESSAO#getArrayValue <em>Array Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Array Value</em>' containment reference.
   * @see #getArrayValue()
   * @generated
   */
  void setArrayValue(ArrayValue value);

  /**
   * Returns the value of the '<em><b>Variaveis</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Variaveis</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Variaveis</em>' containment reference.
   * @see #setVariaveis(VarDecl)
   * @see com.ufcg.compiladores.go.GoPackage#getEXPRESSAO_Variaveis()
   * @model containment="true"
   * @generated
   */
  VarDecl getVariaveis();

  /**
   * Sets the value of the '{@link com.ufcg.compiladores.go.EXPRESSAO#getVariaveis <em>Variaveis</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Variaveis</em>' containment reference.
   * @see #getVariaveis()
   * @generated
   */
  void setVariaveis(VarDecl value);

  /**
   * Returns the value of the '<em><b>Cham</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Cham</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Cham</em>' containment reference.
   * @see #setCham(Chamada)
   * @see com.ufcg.compiladores.go.GoPackage#getEXPRESSAO_Cham()
   * @model containment="true"
   * @generated
   */
  Chamada getCham();

  /**
   * Sets the value of the '{@link com.ufcg.compiladores.go.EXPRESSAO#getCham <em>Cham</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Cham</em>' containment reference.
   * @see #getCham()
   * @generated
   */
  void setCham(Chamada value);

  /**
   * Returns the value of the '<em><b>If</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>If</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>If</em>' containment reference.
   * @see #setIf(IfStmt)
   * @see com.ufcg.compiladores.go.GoPackage#getEXPRESSAO_If()
   * @model containment="true"
   * @generated
   */
  IfStmt getIf();

  /**
   * Sets the value of the '{@link com.ufcg.compiladores.go.EXPRESSAO#getIf <em>If</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>If</em>' containment reference.
   * @see #getIf()
   * @generated
   */
  void setIf(IfStmt value);

} // EXPRESSAO

/**
 * generated by Xtext 2.14.0
 */
package com.ufcg.compiladores.go.impl;

import com.ufcg.compiladores.go.ARIT_EXPR;
import com.ufcg.compiladores.go.GoPackage;
import com.ufcg.compiladores.go.VarCall;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>ARIT EXPR</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.ufcg.compiladores.go.impl.ARIT_EXPRImpl#getNum1 <em>Num1</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.ARIT_EXPRImpl#getVar1 <em>Var1</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.ARIT_EXPRImpl#getOp <em>Op</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.ARIT_EXPRImpl#getNum2 <em>Num2</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.ARIT_EXPRImpl#getVar2 <em>Var2</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.ARIT_EXPRImpl#getNum <em>Num</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.ARIT_EXPRImpl#getVar <em>Var</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.ARIT_EXPRImpl#getAtr <em>Atr</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ARIT_EXPRImpl extends MinimalEObjectImpl.Container implements ARIT_EXPR
{
  /**
   * The default value of the '{@link #getNum1() <em>Num1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNum1()
   * @generated
   * @ordered
   */
  protected static final String NUM1_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNum1() <em>Num1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNum1()
   * @generated
   * @ordered
   */
  protected String num1 = NUM1_EDEFAULT;

  /**
   * The cached value of the '{@link #getVar1() <em>Var1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVar1()
   * @generated
   * @ordered
   */
  protected VarCall var1;

  /**
   * The default value of the '{@link #getOp() <em>Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected static final String OP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOp() <em>Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected String op = OP_EDEFAULT;

  /**
   * The default value of the '{@link #getNum2() <em>Num2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNum2()
   * @generated
   * @ordered
   */
  protected static final String NUM2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNum2() <em>Num2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNum2()
   * @generated
   * @ordered
   */
  protected String num2 = NUM2_EDEFAULT;

  /**
   * The cached value of the '{@link #getVar2() <em>Var2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVar2()
   * @generated
   * @ordered
   */
  protected VarCall var2;

  /**
   * The default value of the '{@link #getNum() <em>Num</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNum()
   * @generated
   * @ordered
   */
  protected static final String NUM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNum() <em>Num</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNum()
   * @generated
   * @ordered
   */
  protected String num = NUM_EDEFAULT;

  /**
   * The cached value of the '{@link #getVar() <em>Var</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVar()
   * @generated
   * @ordered
   */
  protected VarCall var;

  /**
   * The default value of the '{@link #getAtr() <em>Atr</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAtr()
   * @generated
   * @ordered
   */
  protected static final String ATR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAtr() <em>Atr</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAtr()
   * @generated
   * @ordered
   */
  protected String atr = ATR_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ARIT_EXPRImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.ARIT_EXPR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNum1()
  {
    return num1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNum1(String newNum1)
  {
    String oldNum1 = num1;
    num1 = newNum1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.ARIT_EXPR__NUM1, oldNum1, num1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarCall getVar1()
  {
    return var1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVar1(VarCall newVar1, NotificationChain msgs)
  {
    VarCall oldVar1 = var1;
    var1 = newVar1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.ARIT_EXPR__VAR1, oldVar1, newVar1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVar1(VarCall newVar1)
  {
    if (newVar1 != var1)
    {
      NotificationChain msgs = null;
      if (var1 != null)
        msgs = ((InternalEObject)var1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.ARIT_EXPR__VAR1, null, msgs);
      if (newVar1 != null)
        msgs = ((InternalEObject)newVar1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.ARIT_EXPR__VAR1, null, msgs);
      msgs = basicSetVar1(newVar1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.ARIT_EXPR__VAR1, newVar1, newVar1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOp()
  {
    return op;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOp(String newOp)
  {
    String oldOp = op;
    op = newOp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.ARIT_EXPR__OP, oldOp, op));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNum2()
  {
    return num2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNum2(String newNum2)
  {
    String oldNum2 = num2;
    num2 = newNum2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.ARIT_EXPR__NUM2, oldNum2, num2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarCall getVar2()
  {
    return var2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVar2(VarCall newVar2, NotificationChain msgs)
  {
    VarCall oldVar2 = var2;
    var2 = newVar2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.ARIT_EXPR__VAR2, oldVar2, newVar2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVar2(VarCall newVar2)
  {
    if (newVar2 != var2)
    {
      NotificationChain msgs = null;
      if (var2 != null)
        msgs = ((InternalEObject)var2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.ARIT_EXPR__VAR2, null, msgs);
      if (newVar2 != null)
        msgs = ((InternalEObject)newVar2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.ARIT_EXPR__VAR2, null, msgs);
      msgs = basicSetVar2(newVar2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.ARIT_EXPR__VAR2, newVar2, newVar2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNum()
  {
    return num;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNum(String newNum)
  {
    String oldNum = num;
    num = newNum;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.ARIT_EXPR__NUM, oldNum, num));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarCall getVar()
  {
    return var;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVar(VarCall newVar, NotificationChain msgs)
  {
    VarCall oldVar = var;
    var = newVar;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.ARIT_EXPR__VAR, oldVar, newVar);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVar(VarCall newVar)
  {
    if (newVar != var)
    {
      NotificationChain msgs = null;
      if (var != null)
        msgs = ((InternalEObject)var).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.ARIT_EXPR__VAR, null, msgs);
      if (newVar != null)
        msgs = ((InternalEObject)newVar).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.ARIT_EXPR__VAR, null, msgs);
      msgs = basicSetVar(newVar, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.ARIT_EXPR__VAR, newVar, newVar));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAtr()
  {
    return atr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAtr(String newAtr)
  {
    String oldAtr = atr;
    atr = newAtr;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.ARIT_EXPR__ATR, oldAtr, atr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.ARIT_EXPR__VAR1:
        return basicSetVar1(null, msgs);
      case GoPackage.ARIT_EXPR__VAR2:
        return basicSetVar2(null, msgs);
      case GoPackage.ARIT_EXPR__VAR:
        return basicSetVar(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.ARIT_EXPR__NUM1:
        return getNum1();
      case GoPackage.ARIT_EXPR__VAR1:
        return getVar1();
      case GoPackage.ARIT_EXPR__OP:
        return getOp();
      case GoPackage.ARIT_EXPR__NUM2:
        return getNum2();
      case GoPackage.ARIT_EXPR__VAR2:
        return getVar2();
      case GoPackage.ARIT_EXPR__NUM:
        return getNum();
      case GoPackage.ARIT_EXPR__VAR:
        return getVar();
      case GoPackage.ARIT_EXPR__ATR:
        return getAtr();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.ARIT_EXPR__NUM1:
        setNum1((String)newValue);
        return;
      case GoPackage.ARIT_EXPR__VAR1:
        setVar1((VarCall)newValue);
        return;
      case GoPackage.ARIT_EXPR__OP:
        setOp((String)newValue);
        return;
      case GoPackage.ARIT_EXPR__NUM2:
        setNum2((String)newValue);
        return;
      case GoPackage.ARIT_EXPR__VAR2:
        setVar2((VarCall)newValue);
        return;
      case GoPackage.ARIT_EXPR__NUM:
        setNum((String)newValue);
        return;
      case GoPackage.ARIT_EXPR__VAR:
        setVar((VarCall)newValue);
        return;
      case GoPackage.ARIT_EXPR__ATR:
        setAtr((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.ARIT_EXPR__NUM1:
        setNum1(NUM1_EDEFAULT);
        return;
      case GoPackage.ARIT_EXPR__VAR1:
        setVar1((VarCall)null);
        return;
      case GoPackage.ARIT_EXPR__OP:
        setOp(OP_EDEFAULT);
        return;
      case GoPackage.ARIT_EXPR__NUM2:
        setNum2(NUM2_EDEFAULT);
        return;
      case GoPackage.ARIT_EXPR__VAR2:
        setVar2((VarCall)null);
        return;
      case GoPackage.ARIT_EXPR__NUM:
        setNum(NUM_EDEFAULT);
        return;
      case GoPackage.ARIT_EXPR__VAR:
        setVar((VarCall)null);
        return;
      case GoPackage.ARIT_EXPR__ATR:
        setAtr(ATR_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.ARIT_EXPR__NUM1:
        return NUM1_EDEFAULT == null ? num1 != null : !NUM1_EDEFAULT.equals(num1);
      case GoPackage.ARIT_EXPR__VAR1:
        return var1 != null;
      case GoPackage.ARIT_EXPR__OP:
        return OP_EDEFAULT == null ? op != null : !OP_EDEFAULT.equals(op);
      case GoPackage.ARIT_EXPR__NUM2:
        return NUM2_EDEFAULT == null ? num2 != null : !NUM2_EDEFAULT.equals(num2);
      case GoPackage.ARIT_EXPR__VAR2:
        return var2 != null;
      case GoPackage.ARIT_EXPR__NUM:
        return NUM_EDEFAULT == null ? num != null : !NUM_EDEFAULT.equals(num);
      case GoPackage.ARIT_EXPR__VAR:
        return var != null;
      case GoPackage.ARIT_EXPR__ATR:
        return ATR_EDEFAULT == null ? atr != null : !ATR_EDEFAULT.equals(atr);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (num1: ");
    result.append(num1);
    result.append(", op: ");
    result.append(op);
    result.append(", num2: ");
    result.append(num2);
    result.append(", num: ");
    result.append(num);
    result.append(", atr: ");
    result.append(atr);
    result.append(')');
    return result.toString();
  }

} //ARIT_EXPRImpl

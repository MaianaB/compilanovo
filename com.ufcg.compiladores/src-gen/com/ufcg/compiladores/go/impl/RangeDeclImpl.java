/**
 * generated by Xtext 2.14.0
 */
package com.ufcg.compiladores.go.impl;

import com.ufcg.compiladores.go.FunctionCall;
import com.ufcg.compiladores.go.GoPackage;
import com.ufcg.compiladores.go.IDList;
import com.ufcg.compiladores.go.IGUAL;
import com.ufcg.compiladores.go.PONTOSIGUAL;
import com.ufcg.compiladores.go.RangeDecl;
import com.ufcg.compiladores.go.VarCall;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Range Decl</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.ufcg.compiladores.go.impl.RangeDeclImpl#getIdList <em>Id List</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.RangeDeclImpl#getIgual <em>Igual</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.RangeDeclImpl#getOp <em>Op</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.RangeDeclImpl#getVariavel <em>Variavel</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.RangeDeclImpl#getFunc <em>Func</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RangeDeclImpl extends MinimalEObjectImpl.Container implements RangeDecl
{
  /**
   * The cached value of the '{@link #getIdList() <em>Id List</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdList()
   * @generated
   * @ordered
   */
  protected EList<IDList> idList;

  /**
   * The cached value of the '{@link #getIgual() <em>Igual</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIgual()
   * @generated
   * @ordered
   */
  protected IGUAL igual;

  /**
   * The cached value of the '{@link #getOp() <em>Op</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected PONTOSIGUAL op;

  /**
   * The cached value of the '{@link #getVariavel() <em>Variavel</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariavel()
   * @generated
   * @ordered
   */
  protected VarCall variavel;

  /**
   * The cached value of the '{@link #getFunc() <em>Func</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunc()
   * @generated
   * @ordered
   */
  protected FunctionCall func;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RangeDeclImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.RANGE_DECL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<IDList> getIdList()
  {
    if (idList == null)
    {
      idList = new EObjectContainmentEList<IDList>(IDList.class, this, GoPackage.RANGE_DECL__ID_LIST);
    }
    return idList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IGUAL getIgual()
  {
    return igual;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIgual(IGUAL newIgual, NotificationChain msgs)
  {
    IGUAL oldIgual = igual;
    igual = newIgual;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.RANGE_DECL__IGUAL, oldIgual, newIgual);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIgual(IGUAL newIgual)
  {
    if (newIgual != igual)
    {
      NotificationChain msgs = null;
      if (igual != null)
        msgs = ((InternalEObject)igual).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.RANGE_DECL__IGUAL, null, msgs);
      if (newIgual != null)
        msgs = ((InternalEObject)newIgual).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.RANGE_DECL__IGUAL, null, msgs);
      msgs = basicSetIgual(newIgual, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.RANGE_DECL__IGUAL, newIgual, newIgual));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PONTOSIGUAL getOp()
  {
    return op;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOp(PONTOSIGUAL newOp, NotificationChain msgs)
  {
    PONTOSIGUAL oldOp = op;
    op = newOp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.RANGE_DECL__OP, oldOp, newOp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOp(PONTOSIGUAL newOp)
  {
    if (newOp != op)
    {
      NotificationChain msgs = null;
      if (op != null)
        msgs = ((InternalEObject)op).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.RANGE_DECL__OP, null, msgs);
      if (newOp != null)
        msgs = ((InternalEObject)newOp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.RANGE_DECL__OP, null, msgs);
      msgs = basicSetOp(newOp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.RANGE_DECL__OP, newOp, newOp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarCall getVariavel()
  {
    return variavel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVariavel(VarCall newVariavel, NotificationChain msgs)
  {
    VarCall oldVariavel = variavel;
    variavel = newVariavel;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.RANGE_DECL__VARIAVEL, oldVariavel, newVariavel);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVariavel(VarCall newVariavel)
  {
    if (newVariavel != variavel)
    {
      NotificationChain msgs = null;
      if (variavel != null)
        msgs = ((InternalEObject)variavel).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.RANGE_DECL__VARIAVEL, null, msgs);
      if (newVariavel != null)
        msgs = ((InternalEObject)newVariavel).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.RANGE_DECL__VARIAVEL, null, msgs);
      msgs = basicSetVariavel(newVariavel, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.RANGE_DECL__VARIAVEL, newVariavel, newVariavel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionCall getFunc()
  {
    return func;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFunc(FunctionCall newFunc, NotificationChain msgs)
  {
    FunctionCall oldFunc = func;
    func = newFunc;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.RANGE_DECL__FUNC, oldFunc, newFunc);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFunc(FunctionCall newFunc)
  {
    if (newFunc != func)
    {
      NotificationChain msgs = null;
      if (func != null)
        msgs = ((InternalEObject)func).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.RANGE_DECL__FUNC, null, msgs);
      if (newFunc != null)
        msgs = ((InternalEObject)newFunc).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.RANGE_DECL__FUNC, null, msgs);
      msgs = basicSetFunc(newFunc, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.RANGE_DECL__FUNC, newFunc, newFunc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.RANGE_DECL__ID_LIST:
        return ((InternalEList<?>)getIdList()).basicRemove(otherEnd, msgs);
      case GoPackage.RANGE_DECL__IGUAL:
        return basicSetIgual(null, msgs);
      case GoPackage.RANGE_DECL__OP:
        return basicSetOp(null, msgs);
      case GoPackage.RANGE_DECL__VARIAVEL:
        return basicSetVariavel(null, msgs);
      case GoPackage.RANGE_DECL__FUNC:
        return basicSetFunc(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.RANGE_DECL__ID_LIST:
        return getIdList();
      case GoPackage.RANGE_DECL__IGUAL:
        return getIgual();
      case GoPackage.RANGE_DECL__OP:
        return getOp();
      case GoPackage.RANGE_DECL__VARIAVEL:
        return getVariavel();
      case GoPackage.RANGE_DECL__FUNC:
        return getFunc();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.RANGE_DECL__ID_LIST:
        getIdList().clear();
        getIdList().addAll((Collection<? extends IDList>)newValue);
        return;
      case GoPackage.RANGE_DECL__IGUAL:
        setIgual((IGUAL)newValue);
        return;
      case GoPackage.RANGE_DECL__OP:
        setOp((PONTOSIGUAL)newValue);
        return;
      case GoPackage.RANGE_DECL__VARIAVEL:
        setVariavel((VarCall)newValue);
        return;
      case GoPackage.RANGE_DECL__FUNC:
        setFunc((FunctionCall)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.RANGE_DECL__ID_LIST:
        getIdList().clear();
        return;
      case GoPackage.RANGE_DECL__IGUAL:
        setIgual((IGUAL)null);
        return;
      case GoPackage.RANGE_DECL__OP:
        setOp((PONTOSIGUAL)null);
        return;
      case GoPackage.RANGE_DECL__VARIAVEL:
        setVariavel((VarCall)null);
        return;
      case GoPackage.RANGE_DECL__FUNC:
        setFunc((FunctionCall)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.RANGE_DECL__ID_LIST:
        return idList != null && !idList.isEmpty();
      case GoPackage.RANGE_DECL__IGUAL:
        return igual != null;
      case GoPackage.RANGE_DECL__OP:
        return op != null;
      case GoPackage.RANGE_DECL__VARIAVEL:
        return variavel != null;
      case GoPackage.RANGE_DECL__FUNC:
        return func != null;
    }
    return super.eIsSet(featureID);
  }

} //RangeDeclImpl

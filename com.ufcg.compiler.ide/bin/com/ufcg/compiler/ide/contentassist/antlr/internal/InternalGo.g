/*
 * generated by Xtext 2.14.0
 */
grammar InternalGo;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.ufcg.compiler.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.ufcg.compiler.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.ufcg.compiler.services.GoGrammarAccess;

}
@parser::members {
	private GoGrammarAccess grammarAccess;

	public void setGrammarAccess(GoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleInit
entryRuleInit
:
{ before(grammarAccess.getInitRule()); }
	 ruleInit
{ after(grammarAccess.getInitRule()); } 
	 EOF 
;

// Rule Init
ruleInit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitAccess().getElementsAssignment()); }
		(rule__Init__ElementsAssignment)*
		{ after(grammarAccess.getInitAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGoDecl
entryRuleGoDecl
:
{ before(grammarAccess.getGoDeclRule()); }
	 ruleGoDecl
{ after(grammarAccess.getGoDeclRule()); } 
	 EOF 
;

// Rule GoDecl
ruleGoDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoDeclAccess().getAlternatives()); }
		(rule__GoDecl__Alternatives)
		{ after(grammarAccess.getGoDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDecl
entryRuleVarDecl
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup()); }
		(rule__VarDecl__Group__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTIPO
entryRuleTIPO
:
{ before(grammarAccess.getTIPORule()); }
	 ruleTIPO
{ after(grammarAccess.getTIPORule()); } 
	 EOF 
;

// Rule TIPO
ruleTIPO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTIPOAccess().getAlternatives()); }
		(rule__TIPO__Alternatives)
		{ after(grammarAccess.getTIPOAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIGUAL
entryRuleIGUAL
:
{ before(grammarAccess.getIGUALRule()); }
	 ruleIGUAL
{ after(grammarAccess.getIGUALRule()); } 
	 EOF 
;

// Rule IGUAL
ruleIGUAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIGUALAccess().getIgualAssignment()); }
		(rule__IGUAL__IgualAssignment)
		{ after(grammarAccess.getIGUALAccess().getIgualAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEXPRESSAO
entryRuleEXPRESSAO
:
{ before(grammarAccess.getEXPRESSAORule()); }
	 ruleEXPRESSAO
{ after(grammarAccess.getEXPRESSAORule()); } 
	 EOF 
;

// Rule EXPRESSAO
ruleEXPRESSAO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getAlternatives()); }
		(rule__EXPRESSAO__Alternatives)
		{ after(grammarAccess.getEXPRESSAOAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLITERAIS_BASICOS
entryRuleLITERAIS_BASICOS
:
{ before(grammarAccess.getLITERAIS_BASICOSRule()); }
	 ruleLITERAIS_BASICOS
{ after(grammarAccess.getLITERAIS_BASICOSRule()); } 
	 EOF 
;

// Rule LITERAIS_BASICOS
ruleLITERAIS_BASICOS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getAlternatives()); }
		(rule__LITERAIS_BASICOS__Alternatives)
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFUNCAO
entryRuleFUNCAO
:
{ before(grammarAccess.getFUNCAORule()); }
	 ruleFUNCAO
{ after(grammarAccess.getFUNCAORule()); } 
	 EOF 
;

// Rule FUNCAO
ruleFUNCAO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFUNCAOAccess().getGroup()); }
		(rule__FUNCAO__Group__0)
		{ after(grammarAccess.getFUNCAOAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleABRE_PARENTESES
entryRuleABRE_PARENTESES
:
{ before(grammarAccess.getABRE_PARENTESESRule()); }
	 ruleABRE_PARENTESES
{ after(grammarAccess.getABRE_PARENTESESRule()); } 
	 EOF 
;

// Rule ABRE_PARENTESES
ruleABRE_PARENTESES 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getABRE_PARENTESESAccess().getLeftParenthesisKeyword()); }
		'('
		{ after(grammarAccess.getABRE_PARENTESESAccess().getLeftParenthesisKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFECHA_PARENTESES
entryRuleFECHA_PARENTESES
:
{ before(grammarAccess.getFECHA_PARENTESESRule()); }
	 ruleFECHA_PARENTESES
{ after(grammarAccess.getFECHA_PARENTESESRule()); } 
	 EOF 
;

// Rule FECHA_PARENTESES
ruleFECHA_PARENTESES 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFECHA_PARENTESESAccess().getRightParenthesisKeyword()); }
		')'
		{ after(grammarAccess.getFECHA_PARENTESESAccess().getRightParenthesisKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBLOCK
entryRuleBLOCK
:
{ before(grammarAccess.getBLOCKRule()); }
	 ruleBLOCK
{ after(grammarAccess.getBLOCKRule()); } 
	 EOF 
;

// Rule BLOCK
ruleBLOCK 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBLOCKAccess().getGroup()); }
		(rule__BLOCK__Group__0)
		{ after(grammarAccess.getBLOCKAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePARAMETERS_LIST
entryRulePARAMETERS_LIST
:
{ before(grammarAccess.getPARAMETERS_LISTRule()); }
	 rulePARAMETERS_LIST
{ after(grammarAccess.getPARAMETERS_LISTRule()); } 
	 EOF 
;

// Rule PARAMETERS_LIST
rulePARAMETERS_LIST 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPARAMETERS_LISTAccess().getGroup()); }
		(rule__PARAMETERS_LIST__Group__0)
		{ after(grammarAccess.getPARAMETERS_LISTAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePARAMETER
entryRulePARAMETER
:
{ before(grammarAccess.getPARAMETERRule()); }
	 rulePARAMETER
{ after(grammarAccess.getPARAMETERRule()); } 
	 EOF 
;

// Rule PARAMETER
rulePARAMETER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPARAMETERAccess().getGroup()); }
		(rule__PARAMETER__Group__0)
		{ after(grammarAccess.getPARAMETERAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypes
entryRuleTypes
:
{ before(grammarAccess.getTypesRule()); }
	 ruleTypes
{ after(grammarAccess.getTypesRule()); } 
	 EOF 
;

// Rule Types
ruleTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypesAccess().getAlternatives()); }
		(rule__Types__Alternatives)
		{ after(grammarAccess.getTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNUMERO
entryRuleNUMERO
:
{ before(grammarAccess.getNUMERORule()); }
	 ruleNUMERO
{ after(grammarAccess.getNUMERORule()); } 
	 EOF 
;

// Rule NUMERO
ruleNUMERO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNUMEROAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getNUMEROAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSTRING_DECL
entryRuleSTRING_DECL
:
{ before(grammarAccess.getSTRING_DECLRule()); }
	 ruleSTRING_DECL
{ after(grammarAccess.getSTRING_DECLRule()); } 
	 EOF 
;

// Rule STRING_DECL
ruleSTRING_DECL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSTRING_DECLAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getSTRING_DECLAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoDeclAccess().getVarAssignment_0()); }
		(rule__GoDecl__VarAssignment_0)
		{ after(grammarAccess.getGoDeclAccess().getVarAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getGoDeclAccess().getFuncAssignment_1()); }
		(rule__GoDecl__FuncAssignment_1)
		{ after(grammarAccess.getGoDeclAccess().getFuncAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TIPO__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTIPOAccess().getVariavelAssignment_0()); }
		(rule__TIPO__VariavelAssignment_0)
		{ after(grammarAccess.getTIPOAccess().getVariavelAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTIPOAccess().getConstanteAssignment_1()); }
		(rule__TIPO__ConstanteAssignment_1)
		{ after(grammarAccess.getTIPOAccess().getConstanteAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getBasicAssignment_0()); }
		(rule__EXPRESSAO__BasicAssignment_0)
		{ after(grammarAccess.getEXPRESSAOAccess().getBasicAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getDeclFunctionAssignment_1()); }
		(rule__EXPRESSAO__DeclFunctionAssignment_1)
		{ after(grammarAccess.getEXPRESSAOAccess().getDeclFunctionAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LITERAIS_BASICOS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getNumeroAssignment_0()); }
		(rule__LITERAIS_BASICOS__NumeroAssignment_0)
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getNumeroAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getStringAssignment_1()); }
		(rule__LITERAIS_BASICOS__StringAssignment_1)
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getStringAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypesAccess().getStringKeyword_0()); }
		'string'
		{ after(grammarAccess.getTypesAccess().getStringKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getIntKeyword_1()); }
		'int'
		{ after(grammarAccess.getTypesAccess().getIntKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getFloatKeyword_2()); }
		'float'
		{ after(grammarAccess.getTypesAccess().getFloatKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getBooleanKeyword_3()); }
		'boolean'
		{ after(grammarAccess.getTypesAccess().getBooleanKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__0__Impl
	rule__VarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getTipoDeclAssignment_0()); }
	(rule__VarDecl__TipoDeclAssignment_0)
	{ after(grammarAccess.getVarDeclAccess().getTipoDeclAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__1__Impl
	rule__VarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getIdAssignment_1()); }
	(rule__VarDecl__IdAssignment_1)
	{ after(grammarAccess.getVarDeclAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__2__Impl
	rule__VarDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getAtribuicaoAssignment_2()); }
	(rule__VarDecl__AtribuicaoAssignment_2)
	{ after(grammarAccess.getVarDeclAccess().getAtribuicaoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getExpressaoAssignment_3()); }
	(rule__VarDecl__ExpressaoAssignment_3)
	{ after(grammarAccess.getVarDeclAccess().getExpressaoAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FUNCAO__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FUNCAO__Group__0__Impl
	rule__FUNCAO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFUNCAOAccess().getFuncAssignment_0()); }
	(rule__FUNCAO__FuncAssignment_0)
	{ after(grammarAccess.getFUNCAOAccess().getFuncAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FUNCAO__Group__1__Impl
	rule__FUNCAO__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFUNCAOAccess().getNomeAssignment_1()); }
	(rule__FUNCAO__NomeAssignment_1)
	{ after(grammarAccess.getFUNCAOAccess().getNomeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FUNCAO__Group__2__Impl
	rule__FUNCAO__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFUNCAOAccess().getABRE_PARENTESESAssignment_2()); }
	(rule__FUNCAO__ABRE_PARENTESESAssignment_2)
	{ after(grammarAccess.getFUNCAOAccess().getABRE_PARENTESESAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FUNCAO__Group__3__Impl
	rule__FUNCAO__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFUNCAOAccess().getPARAMETERS_LISTAssignment_3()); }
	(rule__FUNCAO__PARAMETERS_LISTAssignment_3)?
	{ after(grammarAccess.getFUNCAOAccess().getPARAMETERS_LISTAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FUNCAO__Group__4__Impl
	rule__FUNCAO__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFUNCAOAccess().getFECHA_PARENTESESAssignment_4()); }
	(rule__FUNCAO__FECHA_PARENTESESAssignment_4)
	{ after(grammarAccess.getFUNCAOAccess().getFECHA_PARENTESESAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FUNCAO__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFUNCAOAccess().getBlocoAssignment_5()); }
	(rule__FUNCAO__BlocoAssignment_5)
	{ after(grammarAccess.getFUNCAOAccess().getBlocoAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BLOCK__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLOCK__Group__0__Impl
	rule__BLOCK__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLOCKAccess().getBLOCKAction_0()); }
	()
	{ after(grammarAccess.getBLOCKAccess().getBLOCKAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLOCK__Group__1__Impl
	rule__BLOCK__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLOCKAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBLOCKAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLOCK__Group__2__Impl
	rule__BLOCK__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLOCKAccess().getListaDeComandosAssignment_2()); }
	(rule__BLOCK__ListaDeComandosAssignment_2)*
	{ after(grammarAccess.getBLOCKAccess().getListaDeComandosAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLOCK__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLOCKAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getBLOCKAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PARAMETERS_LIST__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETERS_LIST__Group__0__Impl
	rule__PARAMETERS_LIST__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERS_LISTAccess().getPARAMETERParserRuleCall_0()); }
	rulePARAMETER
	{ after(grammarAccess.getPARAMETERS_LISTAccess().getPARAMETERParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETERS_LIST__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERS_LISTAccess().getGroup_1()); }
	(rule__PARAMETERS_LIST__Group_1__0)*
	{ after(grammarAccess.getPARAMETERS_LISTAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PARAMETERS_LIST__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETERS_LIST__Group_1__0__Impl
	rule__PARAMETERS_LIST__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERS_LISTAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getPARAMETERS_LISTAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETERS_LIST__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERS_LISTAccess().getPARAMETERAssignment_1_1()); }
	(rule__PARAMETERS_LIST__PARAMETERAssignment_1_1)
	{ after(grammarAccess.getPARAMETERS_LISTAccess().getPARAMETERAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PARAMETER__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETER__Group__0__Impl
	rule__PARAMETER__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERAccess().getIdAssignment_0()); }
	(rule__PARAMETER__IdAssignment_0)
	{ after(grammarAccess.getPARAMETERAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETER__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERAccess().getTipoAssignment_1()); }
	(rule__PARAMETER__TipoAssignment_1)
	{ after(grammarAccess.getPARAMETERAccess().getTipoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Init__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitAccess().getElementsGoDeclParserRuleCall_0()); }
		ruleGoDecl
		{ after(grammarAccess.getInitAccess().getElementsGoDeclParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoDecl__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoDeclAccess().getVarVarDeclParserRuleCall_0_0()); }
		ruleVarDecl
		{ after(grammarAccess.getGoDeclAccess().getVarVarDeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoDecl__FuncAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoDeclAccess().getFuncFUNCAOParserRuleCall_1_0()); }
		ruleFUNCAO
		{ after(grammarAccess.getGoDeclAccess().getFuncFUNCAOParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__TipoDeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getTipoDeclTIPOParserRuleCall_0_0()); }
		ruleTIPO
		{ after(grammarAccess.getVarDeclAccess().getTipoDeclTIPOParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getIdIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVarDeclAccess().getIdIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__AtribuicaoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getAtribuicaoIGUALParserRuleCall_2_0()); }
		ruleIGUAL
		{ after(grammarAccess.getVarDeclAccess().getAtribuicaoIGUALParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__ExpressaoAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getExpressaoEXPRESSAOParserRuleCall_3_0()); }
		ruleEXPRESSAO
		{ after(grammarAccess.getVarDeclAccess().getExpressaoEXPRESSAOParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TIPO__VariavelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTIPOAccess().getVariavelVarKeyword_0_0()); }
		(
			{ before(grammarAccess.getTIPOAccess().getVariavelVarKeyword_0_0()); }
			'var'
			{ after(grammarAccess.getTIPOAccess().getVariavelVarKeyword_0_0()); }
		)
		{ after(grammarAccess.getTIPOAccess().getVariavelVarKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TIPO__ConstanteAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTIPOAccess().getConstanteConstKeyword_1_0()); }
		(
			{ before(grammarAccess.getTIPOAccess().getConstanteConstKeyword_1_0()); }
			'const'
			{ after(grammarAccess.getTIPOAccess().getConstanteConstKeyword_1_0()); }
		)
		{ after(grammarAccess.getTIPOAccess().getConstanteConstKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IGUAL__IgualAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIGUALAccess().getIgualEqualsSignKeyword_0()); }
		(
			{ before(grammarAccess.getIGUALAccess().getIgualEqualsSignKeyword_0()); }
			'='
			{ after(grammarAccess.getIGUALAccess().getIgualEqualsSignKeyword_0()); }
		)
		{ after(grammarAccess.getIGUALAccess().getIgualEqualsSignKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__BasicAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getBasicLITERAIS_BASICOSParserRuleCall_0_0()); }
		ruleLITERAIS_BASICOS
		{ after(grammarAccess.getEXPRESSAOAccess().getBasicLITERAIS_BASICOSParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__DeclFunctionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getDeclFunctionFUNCAOParserRuleCall_1_0()); }
		ruleFUNCAO
		{ after(grammarAccess.getEXPRESSAOAccess().getDeclFunctionFUNCAOParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LITERAIS_BASICOS__NumeroAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getNumeroNUMEROParserRuleCall_0_0()); }
		ruleNUMERO
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getNumeroNUMEROParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LITERAIS_BASICOS__StringAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getStringSTRING_DECLParserRuleCall_1_0()); }
		ruleSTRING_DECL
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getStringSTRING_DECLParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__FuncAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFUNCAOAccess().getFuncFuncKeyword_0_0()); }
		(
			{ before(grammarAccess.getFUNCAOAccess().getFuncFuncKeyword_0_0()); }
			'func'
			{ after(grammarAccess.getFUNCAOAccess().getFuncFuncKeyword_0_0()); }
		)
		{ after(grammarAccess.getFUNCAOAccess().getFuncFuncKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__NomeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFUNCAOAccess().getNomeIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFUNCAOAccess().getNomeIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__ABRE_PARENTESESAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFUNCAOAccess().getABRE_PARENTESESABRE_PARENTESESParserRuleCall_2_0()); }
		ruleABRE_PARENTESES
		{ after(grammarAccess.getFUNCAOAccess().getABRE_PARENTESESABRE_PARENTESESParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__PARAMETERS_LISTAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFUNCAOAccess().getPARAMETERS_LISTPARAMETERS_LISTParserRuleCall_3_0()); }
		rulePARAMETERS_LIST
		{ after(grammarAccess.getFUNCAOAccess().getPARAMETERS_LISTPARAMETERS_LISTParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__FECHA_PARENTESESAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFUNCAOAccess().getFECHA_PARENTESESFECHA_PARENTESESParserRuleCall_4_0()); }
		ruleFECHA_PARENTESES
		{ after(grammarAccess.getFUNCAOAccess().getFECHA_PARENTESESFECHA_PARENTESESParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCAO__BlocoAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFUNCAOAccess().getBlocoBLOCKParserRuleCall_5_0()); }
		ruleBLOCK
		{ after(grammarAccess.getFUNCAOAccess().getBlocoBLOCKParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__ListaDeComandosAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLOCKAccess().getListaDeComandosEXPRESSAOParserRuleCall_2_0()); }
		ruleEXPRESSAO
		{ after(grammarAccess.getBLOCKAccess().getListaDeComandosEXPRESSAOParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__PARAMETERAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPARAMETERS_LISTAccess().getPARAMETERPARAMETERParserRuleCall_1_1_0()); }
		rulePARAMETER
		{ after(grammarAccess.getPARAMETERS_LISTAccess().getPARAMETERPARAMETERParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPARAMETERAccess().getIdIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPARAMETERAccess().getIdIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__TipoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPARAMETERAccess().getTipoTypesParserRuleCall_1_0()); }
		ruleTypes
		{ after(grammarAccess.getPARAMETERAccess().getTipoTypesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

/*
 * generated by Xtext 2.14.0
 */
grammar InternalGo;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.ufcg.compiler.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.ufcg.compiler.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.ufcg.compiler.services.GoGrammarAccess;

}
@parser::members {
	private GoGrammarAccess grammarAccess;

	public void setGrammarAccess(GoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleInit
entryRuleInit
:
{ before(grammarAccess.getInitRule()); }
	 ruleInit
{ after(grammarAccess.getInitRule()); } 
	 EOF 
;

// Rule Init
ruleInit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitAccess().getElementsAssignment()); }
		(rule__Init__ElementsAssignment)*
		{ after(grammarAccess.getInitAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGoDecl
entryRuleGoDecl
:
{ before(grammarAccess.getGoDeclRule()); }
	 ruleGoDecl
{ after(grammarAccess.getGoDeclRule()); } 
	 EOF 
;

// Rule GoDecl
ruleGoDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoDeclAccess().getAlternatives()); }
		(rule__GoDecl__Alternatives)
		{ after(grammarAccess.getGoDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDecl
entryRuleVarDecl
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup()); }
		(rule__VarDecl__Group__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTIPO
entryRuleTIPO
:
{ before(grammarAccess.getTIPORule()); }
	 ruleTIPO
{ after(grammarAccess.getTIPORule()); } 
	 EOF 
;

// Rule TIPO
ruleTIPO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTIPOAccess().getAlternatives()); }
		(rule__TIPO__Alternatives)
		{ after(grammarAccess.getTIPOAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIGUAL
entryRuleIGUAL
:
{ before(grammarAccess.getIGUALRule()); }
	 ruleIGUAL
{ after(grammarAccess.getIGUALRule()); } 
	 EOF 
;

// Rule IGUAL
ruleIGUAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIGUALAccess().getIgualAssignment()); }
		(rule__IGUAL__IgualAssignment)
		{ after(grammarAccess.getIGUALAccess().getIgualAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEXPRESSAO
entryRuleEXPRESSAO
:
{ before(grammarAccess.getEXPRESSAORule()); }
	 ruleEXPRESSAO
{ after(grammarAccess.getEXPRESSAORule()); } 
	 EOF 
;

// Rule EXPRESSAO
ruleEXPRESSAO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getAlternatives()); }
		(rule__EXPRESSAO__Alternatives)
		{ after(grammarAccess.getEXPRESSAOAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLITERAIS_BASICOS
entryRuleLITERAIS_BASICOS
:
{ before(grammarAccess.getLITERAIS_BASICOSRule()); }
	 ruleLITERAIS_BASICOS
{ after(grammarAccess.getLITERAIS_BASICOSRule()); } 
	 EOF 
;

// Rule LITERAIS_BASICOS
ruleLITERAIS_BASICOS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getAlternatives()); }
		(rule__LITERAIS_BASICOS__Alternatives)
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionType
entryRuleFunctionType
:
{ before(grammarAccess.getFunctionTypeRule()); }
	 ruleFunctionType
{ after(grammarAccess.getFunctionTypeRule()); } 
	 EOF 
;

// Rule FunctionType
ruleFunctionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getGroup()); }
		(rule__FunctionType__Group__0)
		{ after(grammarAccess.getFunctionTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignature
entryRuleSignature
:
{ before(grammarAccess.getSignatureRule()); }
	 ruleSignature
{ after(grammarAccess.getSignatureRule()); } 
	 EOF 
;

// Rule Signature
ruleSignature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignatureAccess().getGroup()); }
		(rule__Signature__Group__0)
		{ after(grammarAccess.getSignatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResult
entryRuleResult
:
{ before(grammarAccess.getResultRule()); }
	 ruleResult
{ after(grammarAccess.getResultRule()); } 
	 EOF 
;

// Rule Result
ruleResult 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResultAccess().getAlternatives()); }
		(rule__Result__Alternatives)
		{ after(grammarAccess.getResultAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameters
entryRuleParameters
:
{ before(grammarAccess.getParametersRule()); }
	 ruleParameters
{ after(grammarAccess.getParametersRule()); } 
	 EOF 
;

// Rule Parameters
ruleParameters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametersAccess().getGroup()); }
		(rule__Parameters__Group__0)
		{ after(grammarAccess.getParametersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleABRE_PARENTESES
entryRuleABRE_PARENTESES
:
{ before(grammarAccess.getABRE_PARENTESESRule()); }
	 ruleABRE_PARENTESES
{ after(grammarAccess.getABRE_PARENTESESRule()); } 
	 EOF 
;

// Rule ABRE_PARENTESES
ruleABRE_PARENTESES 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getABRE_PARENTESESAccess().getLeftParenthesisKeyword()); }
		'('
		{ after(grammarAccess.getABRE_PARENTESESAccess().getLeftParenthesisKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFECHA_PARENTESES
entryRuleFECHA_PARENTESES
:
{ before(grammarAccess.getFECHA_PARENTESESRule()); }
	 ruleFECHA_PARENTESES
{ after(grammarAccess.getFECHA_PARENTESESRule()); } 
	 EOF 
;

// Rule FECHA_PARENTESES
ruleFECHA_PARENTESES 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFECHA_PARENTESESAccess().getRightParenthesisKeyword()); }
		')'
		{ after(grammarAccess.getFECHA_PARENTESESAccess().getRightParenthesisKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBLOCK
entryRuleBLOCK
:
{ before(grammarAccess.getBLOCKRule()); }
	 ruleBLOCK
{ after(grammarAccess.getBLOCKRule()); } 
	 EOF 
;

// Rule BLOCK
ruleBLOCK 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBLOCKAccess().getGroup()); }
		(rule__BLOCK__Group__0)
		{ after(grammarAccess.getBLOCKAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePARAMETERS_LIST
entryRulePARAMETERS_LIST
:
{ before(grammarAccess.getPARAMETERS_LISTRule()); }
	 rulePARAMETERS_LIST
{ after(grammarAccess.getPARAMETERS_LISTRule()); } 
	 EOF 
;

// Rule PARAMETERS_LIST
rulePARAMETERS_LIST 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPARAMETERS_LISTAccess().getGroup()); }
		(rule__PARAMETERS_LIST__Group__0)
		{ after(grammarAccess.getPARAMETERS_LISTAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePARAMETER
entryRulePARAMETER
:
{ before(grammarAccess.getPARAMETERRule()); }
	 rulePARAMETER
{ after(grammarAccess.getPARAMETERRule()); } 
	 EOF 
;

// Rule PARAMETER
rulePARAMETER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPARAMETERAccess().getGroup()); }
		(rule__PARAMETER__Group__0)
		{ after(grammarAccess.getPARAMETERAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypes
entryRuleTypes
:
{ before(grammarAccess.getTypesRule()); }
	 ruleTypes
{ after(grammarAccess.getTypesRule()); } 
	 EOF 
;

// Rule Types
ruleTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypesAccess().getAlternatives()); }
		(rule__Types__Alternatives)
		{ after(grammarAccess.getTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoDeclAccess().getVarAssignment_0()); }
		(rule__GoDecl__VarAssignment_0)
		{ after(grammarAccess.getGoDeclAccess().getVarAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getGoDeclAccess().getFuncAssignment_1()); }
		(rule__GoDecl__FuncAssignment_1)
		{ after(grammarAccess.getGoDeclAccess().getFuncAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TIPO__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTIPOAccess().getVariavelAssignment_0()); }
		(rule__TIPO__VariavelAssignment_0)
		{ after(grammarAccess.getTIPOAccess().getVariavelAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTIPOAccess().getConstanteAssignment_1()); }
		(rule__TIPO__ConstanteAssignment_1)
		{ after(grammarAccess.getTIPOAccess().getConstanteAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getBasicAssignment_0()); }
		(rule__EXPRESSAO__BasicAssignment_0)
		{ after(grammarAccess.getEXPRESSAOAccess().getBasicAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getDeclFunctionAssignment_1()); }
		(rule__EXPRESSAO__DeclFunctionAssignment_1)
		{ after(grammarAccess.getEXPRESSAOAccess().getDeclFunctionAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getVariaveisAssignment_2()); }
		(rule__EXPRESSAO__VariaveisAssignment_2)
		{ after(grammarAccess.getEXPRESSAOAccess().getVariaveisAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LITERAIS_BASICOS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getNumeroAssignment_0()); }
		(rule__LITERAIS_BASICOS__NumeroAssignment_0)
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getNumeroAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getStringAssignment_1()); }
		(rule__LITERAIS_BASICOS__StringAssignment_1)
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getStringAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getGroup_0()); }
		(rule__Result__Group_0__0)
		{ after(grammarAccess.getResultAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getResultAccess().getTipoAssignment_1()); }
		(rule__Result__TipoAssignment_1)
		{ after(grammarAccess.getResultAccess().getTipoAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypesAccess().getStringKeyword_0()); }
		'string'
		{ after(grammarAccess.getTypesAccess().getStringKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getIntKeyword_1()); }
		'int'
		{ after(grammarAccess.getTypesAccess().getIntKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getFloatKeyword_2()); }
		'float'
		{ after(grammarAccess.getTypesAccess().getFloatKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypesAccess().getBooleanKeyword_3()); }
		'boolean'
		{ after(grammarAccess.getTypesAccess().getBooleanKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__0__Impl
	rule__VarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getTipoDeclAssignment_0()); }
	(rule__VarDecl__TipoDeclAssignment_0)
	{ after(grammarAccess.getVarDeclAccess().getTipoDeclAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__1__Impl
	rule__VarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getIdAssignment_1()); }
	(rule__VarDecl__IdAssignment_1)
	{ after(grammarAccess.getVarDeclAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__2__Impl
	rule__VarDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getAtribuicaoAssignment_2()); }
	(rule__VarDecl__AtribuicaoAssignment_2)
	{ after(grammarAccess.getVarDeclAccess().getAtribuicaoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getExpressaoAssignment_3()); }
	(rule__VarDecl__ExpressaoAssignment_3)
	{ after(grammarAccess.getVarDeclAccess().getExpressaoAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__0__Impl
	rule__FunctionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctionTypeAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__1__Impl
	rule__FunctionType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getNomeAssignment_1()); }
	(rule__FunctionType__NomeAssignment_1)
	{ after(grammarAccess.getFunctionTypeAccess().getNomeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__2__Impl
	rule__FunctionType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getAssinaturaAssignment_2()); }
	(rule__FunctionType__AssinaturaAssignment_2)
	{ after(grammarAccess.getFunctionTypeAccess().getAssinaturaAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getBlocoAssignment_3()); }
	(rule__FunctionType__BlocoAssignment_3)?
	{ after(grammarAccess.getFunctionTypeAccess().getBlocoAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__0__Impl
	rule__Signature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getParametersParserRuleCall_0()); }
	ruleParameters
	{ after(grammarAccess.getSignatureAccess().getParametersParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getRetornoAssignment_1()); }
	(rule__Signature__RetornoAssignment_1)?
	{ after(grammarAccess.getSignatureAccess().getRetornoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Result__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Result__Group_0__0__Impl
	rule__Result__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultAccess().getResultAction_0_0()); }
	()
	{ after(grammarAccess.getResultAccess().getResultAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Result__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultAccess().getParametrosAssignment_0_1()); }
	(rule__Result__ParametrosAssignment_0_1)
	{ after(grammarAccess.getResultAccess().getParametrosAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__0__Impl
	rule__Parameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParametersAction_0()); }
	()
	{ after(grammarAccess.getParametersAccess().getParametersAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__1__Impl
	rule__Parameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getABRE_PARENTESESParserRuleCall_1()); }
	ruleABRE_PARENTESES
	{ after(grammarAccess.getParametersAccess().getABRE_PARENTESESParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__2__Impl
	rule__Parameters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getPARAMETERS_LISTParserRuleCall_2()); }
	(rulePARAMETERS_LIST)?
	{ after(grammarAccess.getParametersAccess().getPARAMETERS_LISTParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getFECHA_PARENTESESParserRuleCall_3()); }
	ruleFECHA_PARENTESES
	{ after(grammarAccess.getParametersAccess().getFECHA_PARENTESESParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BLOCK__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLOCK__Group__0__Impl
	rule__BLOCK__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLOCKAccess().getBLOCKAction_0()); }
	()
	{ after(grammarAccess.getBLOCKAccess().getBLOCKAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLOCK__Group__1__Impl
	rule__BLOCK__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLOCKAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBLOCKAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLOCK__Group__2__Impl
	rule__BLOCK__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLOCKAccess().getListaDeComandosAssignment_2()); }
	(rule__BLOCK__ListaDeComandosAssignment_2)*
	{ after(grammarAccess.getBLOCKAccess().getListaDeComandosAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLOCK__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLOCKAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getBLOCKAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PARAMETERS_LIST__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETERS_LIST__Group__0__Impl
	rule__PARAMETERS_LIST__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERS_LISTAccess().getPARAMETERParserRuleCall_0()); }
	rulePARAMETER
	{ after(grammarAccess.getPARAMETERS_LISTAccess().getPARAMETERParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETERS_LIST__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERS_LISTAccess().getGroup_1()); }
	(rule__PARAMETERS_LIST__Group_1__0)*
	{ after(grammarAccess.getPARAMETERS_LISTAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PARAMETERS_LIST__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETERS_LIST__Group_1__0__Impl
	rule__PARAMETERS_LIST__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERS_LISTAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getPARAMETERS_LISTAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETERS_LIST__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERS_LISTAccess().getPARAMETERAssignment_1_1()); }
	(rule__PARAMETERS_LIST__PARAMETERAssignment_1_1)
	{ after(grammarAccess.getPARAMETERS_LISTAccess().getPARAMETERAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PARAMETER__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETER__Group__0__Impl
	rule__PARAMETER__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERAccess().getIdAssignment_0()); }
	(rule__PARAMETER__IdAssignment_0)
	{ after(grammarAccess.getPARAMETERAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PARAMETER__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPARAMETERAccess().getTipoAssignment_1()); }
	(rule__PARAMETER__TipoAssignment_1)
	{ after(grammarAccess.getPARAMETERAccess().getTipoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Init__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitAccess().getElementsGoDeclParserRuleCall_0()); }
		ruleGoDecl
		{ after(grammarAccess.getInitAccess().getElementsGoDeclParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoDecl__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoDeclAccess().getVarVarDeclParserRuleCall_0_0()); }
		ruleVarDecl
		{ after(grammarAccess.getGoDeclAccess().getVarVarDeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoDecl__FuncAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoDeclAccess().getFuncFunctionTypeParserRuleCall_1_0()); }
		ruleFunctionType
		{ after(grammarAccess.getGoDeclAccess().getFuncFunctionTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__TipoDeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getTipoDeclTIPOParserRuleCall_0_0()); }
		ruleTIPO
		{ after(grammarAccess.getVarDeclAccess().getTipoDeclTIPOParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getIdIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVarDeclAccess().getIdIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__AtribuicaoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getAtribuicaoIGUALParserRuleCall_2_0()); }
		ruleIGUAL
		{ after(grammarAccess.getVarDeclAccess().getAtribuicaoIGUALParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__ExpressaoAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getExpressaoEXPRESSAOParserRuleCall_3_0()); }
		ruleEXPRESSAO
		{ after(grammarAccess.getVarDeclAccess().getExpressaoEXPRESSAOParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TIPO__VariavelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTIPOAccess().getVariavelVarKeyword_0_0()); }
		(
			{ before(grammarAccess.getTIPOAccess().getVariavelVarKeyword_0_0()); }
			'var'
			{ after(grammarAccess.getTIPOAccess().getVariavelVarKeyword_0_0()); }
		)
		{ after(grammarAccess.getTIPOAccess().getVariavelVarKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TIPO__ConstanteAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTIPOAccess().getConstanteConstKeyword_1_0()); }
		(
			{ before(grammarAccess.getTIPOAccess().getConstanteConstKeyword_1_0()); }
			'const'
			{ after(grammarAccess.getTIPOAccess().getConstanteConstKeyword_1_0()); }
		)
		{ after(grammarAccess.getTIPOAccess().getConstanteConstKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IGUAL__IgualAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIGUALAccess().getIgualEqualsSignKeyword_0()); }
		(
			{ before(grammarAccess.getIGUALAccess().getIgualEqualsSignKeyword_0()); }
			'='
			{ after(grammarAccess.getIGUALAccess().getIgualEqualsSignKeyword_0()); }
		)
		{ after(grammarAccess.getIGUALAccess().getIgualEqualsSignKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__BasicAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getBasicLITERAIS_BASICOSParserRuleCall_0_0()); }
		ruleLITERAIS_BASICOS
		{ after(grammarAccess.getEXPRESSAOAccess().getBasicLITERAIS_BASICOSParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__DeclFunctionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getDeclFunctionFunctionTypeParserRuleCall_1_0()); }
		ruleFunctionType
		{ after(grammarAccess.getEXPRESSAOAccess().getDeclFunctionFunctionTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSAO__VariaveisAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSAOAccess().getVariaveisVarDeclParserRuleCall_2_0()); }
		ruleVarDecl
		{ after(grammarAccess.getEXPRESSAOAccess().getVariaveisVarDeclParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LITERAIS_BASICOS__NumeroAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getNumeroNUMEROTerminalRuleCall_0_0()); }
		RULE_NUMERO
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getNumeroNUMEROTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LITERAIS_BASICOS__StringAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLITERAIS_BASICOSAccess().getStringSTRING_DECLTerminalRuleCall_1_0()); }
		RULE_STRING_DECL
		{ after(grammarAccess.getLITERAIS_BASICOSAccess().getStringSTRING_DECLTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__NomeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getNomeIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionTypeAccess().getNomeIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__AssinaturaAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getAssinaturaSignatureParserRuleCall_2_0()); }
		ruleSignature
		{ after(grammarAccess.getFunctionTypeAccess().getAssinaturaSignatureParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__BlocoAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getBlocoBLOCKParserRuleCall_3_0()); }
		ruleBLOCK
		{ after(grammarAccess.getFunctionTypeAccess().getBlocoBLOCKParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__RetornoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getRetornoResultParserRuleCall_1_0()); }
		ruleResult
		{ after(grammarAccess.getSignatureAccess().getRetornoResultParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__ParametrosAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getParametrosParametersParserRuleCall_0_1_0()); }
		ruleParameters
		{ after(grammarAccess.getResultAccess().getParametrosParametersParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__TipoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getTipoTypesParserRuleCall_1_0()); }
		ruleTypes
		{ after(grammarAccess.getResultAccess().getTipoTypesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLOCK__ListaDeComandosAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLOCKAccess().getListaDeComandosEXPRESSAOParserRuleCall_2_0()); }
		ruleEXPRESSAO
		{ after(grammarAccess.getBLOCKAccess().getListaDeComandosEXPRESSAOParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETERS_LIST__PARAMETERAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPARAMETERS_LISTAccess().getPARAMETERPARAMETERParserRuleCall_1_1_0()); }
		rulePARAMETER
		{ after(grammarAccess.getPARAMETERS_LISTAccess().getPARAMETERPARAMETERParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPARAMETERAccess().getIdIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPARAMETERAccess().getIdIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER__TipoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPARAMETERAccess().getTipoTypesParserRuleCall_1_0()); }
		ruleTypes
		{ after(grammarAccess.getPARAMETERAccess().getTipoTypesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_NUMERO : RULE_INT;

RULE_STRING_DECL : '"' (RULE_ID|RULE_NUMERO) '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

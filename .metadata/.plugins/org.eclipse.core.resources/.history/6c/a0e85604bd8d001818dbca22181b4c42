/*
 * generated by Xtext 2.14.0
 */
package com.ufcg.compiler.validation

import org.eclipse.xtext.validation.Check
import com.ufcg.compiler.go.VarDecl
import com.ufcg.compiler.go.LITERAIS_BASICOS
import com.ufcg.compiler.go.GoPackage
import java.util.HashMap
import java.util.ArrayList
import java.util.List
import com.ufcg.compiler.go.Init
import com.ufcg.compiler.go.Assignment
import com.ufcg.compiler.go.TIPO
import com.ufcg.compiler.go.Const

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class GoValidator extends AbstractGoValidator {
	
	private var variaveis = new HashMap<String, VarDecl>();
	
	public static class Function{
  		public int param_number = 0;
  		public List<String> params_types = new ArrayList<String>();
  		public String retType;
  		public String name;
  	}
  
 	private var functions = <String, Function>newHashMap();
	
	@Check
	def restart(Init init) {
		variaveis.clear();
		functions.clear();
	}
	
	@Check
	def checaVariavelDeclaradaSemInicializar(VarDecl varDecl) {
		if (!variaveis.containsKey(varDecl.signature.id)) {
			variaveis.put(varDecl.id, varDecl)
		} else {
			error("Variável já declarada", null)
		}
		
		if (varDecl.expressao === null) {
			warning("Variável declarada sem inicialização", GoPackage.Literals.VAR_DECL__EXPRESSAO)
		}
	}
	
	@Check
	def checaAtribuicaoSemValor(Assignment a) {
		if (a.expressao === null) {
			error("É necessário inicializar um valor", null)
		}
	}
	
//	@Check
//	def checaAtribuicaoAConstante(Assignment a) {
//		if (isVarDeclarada(a.id) && a.tipoDecl instanceof Const) {
//			error("Não é possível reatribuir o valor de uma constante", null)
//		}
//	}
	
	def boolean isVarDeclarada(String id) {
		return variaveis.containsKey(id)
	}

//	@Check
//	def testaSeVarComTipoRecebeTipoCerto(VarDecl varDecl) {
//		if (varDecl.type !== null) {
//			if (varDecl.type == "string") {
//				if (varDecl.expressao instanceof LITERAIS_BASICOS) {
//					error("Erro sintático", GoPackage.Literals.VAR_DECL__EXPRESSAO)
//				}
//			}
//		}
//	}

	
}

/**
 * generated by Xtext 2.14.0
 */
package com.ufcg.compiler.go.impl;

import com.ufcg.compiler.go.EXPRESSAO;
import com.ufcg.compiler.go.FunctionType;
import com.ufcg.compiler.go.GoPackage;
import com.ufcg.compiler.go.LITERAIS_BASICOS;
import com.ufcg.compiler.go.VarDecl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>EXPRESSAO</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.ufcg.compiler.go.impl.EXPRESSAOImpl#getBasic <em>Basic</em>}</li>
 *   <li>{@link com.ufcg.compiler.go.impl.EXPRESSAOImpl#getDeclFunction <em>Decl Function</em>}</li>
 *   <li>{@link com.ufcg.compiler.go.impl.EXPRESSAOImpl#getVariaveis <em>Variaveis</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EXPRESSAOImpl extends MinimalEObjectImpl.Container implements EXPRESSAO
{
  /**
   * The cached value of the '{@link #getBasic() <em>Basic</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBasic()
   * @generated
   * @ordered
   */
  protected LITERAIS_BASICOS basic;

  /**
   * The cached value of the '{@link #getDeclFunction() <em>Decl Function</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclFunction()
   * @generated
   * @ordered
   */
  protected FunctionType declFunction;

  /**
   * The cached value of the '{@link #getVariaveis() <em>Variaveis</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariaveis()
   * @generated
   * @ordered
   */
  protected VarDecl variaveis;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EXPRESSAOImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.EXPRESSAO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LITERAIS_BASICOS getBasic()
  {
    return basic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBasic(LITERAIS_BASICOS newBasic, NotificationChain msgs)
  {
    LITERAIS_BASICOS oldBasic = basic;
    basic = newBasic;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.EXPRESSAO__BASIC, oldBasic, newBasic);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBasic(LITERAIS_BASICOS newBasic)
  {
    if (newBasic != basic)
    {
      NotificationChain msgs = null;
      if (basic != null)
        msgs = ((InternalEObject)basic).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.EXPRESSAO__BASIC, null, msgs);
      if (newBasic != null)
        msgs = ((InternalEObject)newBasic).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.EXPRESSAO__BASIC, null, msgs);
      msgs = basicSetBasic(newBasic, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.EXPRESSAO__BASIC, newBasic, newBasic));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionType getDeclFunction()
  {
    return declFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDeclFunction(FunctionType newDeclFunction, NotificationChain msgs)
  {
    FunctionType oldDeclFunction = declFunction;
    declFunction = newDeclFunction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.EXPRESSAO__DECL_FUNCTION, oldDeclFunction, newDeclFunction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDeclFunction(FunctionType newDeclFunction)
  {
    if (newDeclFunction != declFunction)
    {
      NotificationChain msgs = null;
      if (declFunction != null)
        msgs = ((InternalEObject)declFunction).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.EXPRESSAO__DECL_FUNCTION, null, msgs);
      if (newDeclFunction != null)
        msgs = ((InternalEObject)newDeclFunction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.EXPRESSAO__DECL_FUNCTION, null, msgs);
      msgs = basicSetDeclFunction(newDeclFunction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.EXPRESSAO__DECL_FUNCTION, newDeclFunction, newDeclFunction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarDecl getVariaveis()
  {
    return variaveis;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVariaveis(VarDecl newVariaveis, NotificationChain msgs)
  {
    VarDecl oldVariaveis = variaveis;
    variaveis = newVariaveis;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.EXPRESSAO__VARIAVEIS, oldVariaveis, newVariaveis);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVariaveis(VarDecl newVariaveis)
  {
    if (newVariaveis != variaveis)
    {
      NotificationChain msgs = null;
      if (variaveis != null)
        msgs = ((InternalEObject)variaveis).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.EXPRESSAO__VARIAVEIS, null, msgs);
      if (newVariaveis != null)
        msgs = ((InternalEObject)newVariaveis).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.EXPRESSAO__VARIAVEIS, null, msgs);
      msgs = basicSetVariaveis(newVariaveis, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.EXPRESSAO__VARIAVEIS, newVariaveis, newVariaveis));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.EXPRESSAO__BASIC:
        return basicSetBasic(null, msgs);
      case GoPackage.EXPRESSAO__DECL_FUNCTION:
        return basicSetDeclFunction(null, msgs);
      case GoPackage.EXPRESSAO__VARIAVEIS:
        return basicSetVariaveis(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.EXPRESSAO__BASIC:
        return getBasic();
      case GoPackage.EXPRESSAO__DECL_FUNCTION:
        return getDeclFunction();
      case GoPackage.EXPRESSAO__VARIAVEIS:
        return getVariaveis();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.EXPRESSAO__BASIC:
        setBasic((LITERAIS_BASICOS)newValue);
        return;
      case GoPackage.EXPRESSAO__DECL_FUNCTION:
        setDeclFunction((FunctionType)newValue);
        return;
      case GoPackage.EXPRESSAO__VARIAVEIS:
        setVariaveis((VarDecl)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.EXPRESSAO__BASIC:
        setBasic((LITERAIS_BASICOS)null);
        return;
      case GoPackage.EXPRESSAO__DECL_FUNCTION:
        setDeclFunction((FunctionType)null);
        return;
      case GoPackage.EXPRESSAO__VARIAVEIS:
        setVariaveis((VarDecl)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.EXPRESSAO__BASIC:
        return basic != null;
      case GoPackage.EXPRESSAO__DECL_FUNCTION:
        return declFunction != null;
      case GoPackage.EXPRESSAO__VARIAVEIS:
        return variaveis != null;
    }
    return super.eIsSet(featureID);
  }

} //EXPRESSAOImpl
